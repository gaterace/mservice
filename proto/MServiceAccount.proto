// Copyright 2019-2021 Demian Harvill
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package org.gaterace.mservice.account;
option csharp_namespace = "MServiceAccount";
option go_package = "mserviceaccount";

import "DmlExtension.proto";



// service methods for MService account
service MServiceAccount {
    // login as account user and get a json web token
    rpc login (LoginRequest) returns (LoginResponse);
    // create a new account
    rpc create_account (CreateAccountRequest) returns (CreateAccountResponse);
    // update an existing account
    rpc update_account (UpdateAccountRequest) returns (UpdateAccountResponse);
    // delete an existing account
    rpc delete_account (DeleteAccountRequest) returns (DeleteAccountResponse);
    // get an account by account id
    rpc get_account_by_id (GetAccountByIdRequest) returns (GetAccountByIdResponse);
    // get an account by account name
    rpc get_account_by_name (GetAccountByNameRequest) returns (GetAccountByNameResponse);
    // get all account names
    rpc get_account_names (GetAccountNamesRequest) returns (GetAccountNamesResponse);
    // create an account user
    rpc create_account_user (CreateAccountUserRequest) returns (CreateAccountUserResponse);
    // update an existing account user
    rpc update_account_user (UpdateAccountUserRequest) returns (UpdateAccountUserResponse);
    // update an existing account user password
    rpc update_account_user_password (UpdateAccountUserPasswordRequest) returns (UpdateAccountUserPasswordResponse);
    // delete an existing account user
    rpc delete_account_user (DeleteAccountUserRequest) returns (DeleteAccountUserResponse);
    // get an account user by id
    rpc get_account_user_by_id (GetAccountUserByIdRequest) returns (GetAccountUserByIdResponse);
    // get an account user by email
    rpc get_account_user_by_email (GetAccountUserByEmailRequest) returns (GetAccountUserByEmailResponse);
    // get all account users in account
    rpc get_account_users (GetAccountUsersRequest) returns (GetAccountUsersResponse);
    // create a claim name
    rpc create_claim_name (CreateClaimNameRequest) returns (CreateClaimNameResponse);
    // update an existing claim name
    rpc update_claim_name (UpdateClaimNameRequest) returns (UpdateClaimNameResponse);
    // delete an existing claim name
    rpc delete_claim_name (DeleteClaimNameRequest) returns (DeleteClaimNameResponse);
    // get all claim names
    rpc get_claim_names (GetClaimNamesRequest) returns (GetClaimNamesResponse);
    // create claim value
    rpc create_claim_value (CreateClaimValueRequest) returns (CreateClaimValueResponse);
    // update existing claim value
    rpc update_claim_value (UpdateClaimValueRequest) returns (UpdateClaimValueResponse);
    // delete existing claim value
    rpc delete_claim_value (DeleteClaimValueRequest) returns (DeleteClaimValueResponse);
    // get claim value by id
    rpc get_claim_value_by_id (GetClaimValueByIdRequest) returns (GetClaimValueByIdResponse);
    // get all claim values for name id
    rpc get_claim_values_by_name_id (GetClaimValuesByNameIdRequest) returns (GetClaimValuesByNameIdResponse);
    // get all claim values for all claim names
    rpc get_claim_values (GetClaimValuesRequest) returns (GetClaimValuesResponse);
    // create account role
    rpc create_account_role (CreateAccountRoleRequest) returns (CreateAccountRoleResponse);
    // update existing account role
    rpc update_account_role (UpdateAccountRoleRequest) returns (UpdateAccountRoleResponse);
    // delete existing account role
    rpc delete_account_role (DeleteAccountRoleRequest) returns (DeleteAccountRoleResponse);
    // get account role by id
    rpc get_account_role_by_id (GetAccountRoleByIdRequest) returns (GetAccountRoleByIdResponse);
    // get all account roles in account
    rpc get_account_roles (GetAccountRolesRequest) returns (GetAccountRolesResponse);
    // associate an account user with an account role
    rpc add_user_to_role (AddUserToRoleRequest) returns (AddUserToRoleResponse);
    // disassociate an account user from an account role
    rpc remove_user_from_role (RemoveUserFromRoleRequest) returns (RemoveUserFromRoleResponse);
    // associate a claim with an account role
    rpc add_claim_to_role (AddClaimToRoleRequest) returns (AddClaimToRoleResponse);
    // remove a claim from an account role
    rpc remove_claim_from_role (RemoveClaimFromRoleRequest) returns (RemoveClaimFromRoleResponse);
    // get current server version and uptime - health check
    rpc get_server_version (GetServerVersionRequest) returns (GetServerVersionResponse);
  
}



// MService account entity
message Account {
    // unique identifier for an MService account
    int64 account_id = 1;
    // creation date
    dml.DateTime created = 2;
    // modification date
    dml.DateTime modified = 3;
    // deletion date
    dml.DateTime deleted = 4;
    // has record been deleted?
    bool is_deleted = 5;
    // version of this record
    int32 version = 6;
    // name for account
    string account_name = 7;
    // long name for account
    string account_long_name = 8;
    // account_type
    int32 account_type = 9;
    // account address line 1
    string address1 = 10;
    // account address line 2
    string address2 = 11;
    // account address city
    string city = 12;
    // account address state
    string state = 13;
    // account address postal or zip code
    string postal_code = 14;
    // account address country code
    string country_code = 15;
    // account phone number
    string phone = 16;
    // email address
    string email = 17;

}

// MService account user entity
message AccountUser {
    // unique identifier for an MService account user
    int64 user_id = 1;
    // creation date
    dml.DateTime created = 2;
    // modification date
    dml.DateTime modified = 3;
    // deletion date
    dml.DateTime deleted = 4;
    // has record been deleted?
    bool is_deleted = 5;
    // version of this record
    int32 version = 6;
    // unique identifier for an MService account
    int64 account_id = 7;
    // email address
    string email = 8;
    // account user full name
    string user_full_name = 9;
    // type of account user
    int32 user_type = 10;
    // account user encrypted password hash
    string password_enc = 11;
    // list of account role objects
    repeated AccountRole account_roles = 12;

}

// MService account role entity
message AccountRole {
    // unique identifier for an MService account role
    int64 role_id = 1;
    // creation date
    dml.DateTime created = 2;
    // modification date
    dml.DateTime modified = 3;
    // deletion date
    dml.DateTime deleted = 4;
    // has record been deleted?
    bool is_deleted = 5;
    // version of this record
    int32 version = 6;
    // unique identifier for an MService account
    int64 account_id = 7;
    // descriptive name for role
    string role_name = 8;
    // list of claim value objects
    repeated ClaimValue claim_values = 9;

}

// MService account user to role map
message AccountRoleMap {
    // unique identifier for an MService account user
    int64 user_id = 1;
    // unique identifier for an MService account role
    int64 role_id = 2;
    // creation date
    dml.DateTime created = 3;
    // deletion date
    dml.DateTime deleted = 4;
    // has record been deleted?
    bool is_deleted = 5;

}

// MService claim name entity
message Claim {
    // unique identifier for an MService claim name
    int64 claim_name_id = 1;
    // creation date
    dml.DateTime created = 2;
    // modification date
    dml.DateTime modified = 3;
    // deletion date
    dml.DateTime deleted = 4;
    // has record been deleted?
    bool is_deleted = 5;
    // version of this record
    int32 version = 6;
    // claim name
    string claim_name = 7;
    // claim description
    string claim_description = 8;

}

// MService claim value entity
message ClaimValue {
    // unique identifier for an MService claim value
    int64 claim_value_id = 1;
    // creation date
    dml.DateTime created = 2;
    // modification date
    dml.DateTime modified = 3;
    // deletion date
    dml.DateTime deleted = 4;
    // has record been deleted?
    bool is_deleted = 5;
    // version of this record
    int32 version = 6;
    // unique identifier for an MService claim name
    int64 claim_name_id = 7;
    // claim value
    string claim_val = 8;
    // claim value description
    string claim_value_description = 9;
    // single claim object
    Claim claim = 10;

}

message RoleClaimMap {
    // unique identifier for an MService account role
    int64 role_id = 1;
    // unique identifier for an MService claim value
    int64 claim_value_id = 2;
    // creation date
    dml.DateTime created = 3;
    // deletion date
    dml.DateTime deleted = 4;
    // has record been deleted?
    bool is_deleted = 5;

}

// request parameters for method login
message LoginRequest {
    // name for account
    string account_name = 1;
    // email address
    string email = 2;
    // password for login
    string password = 3;

}

// response parameters for method login
message LoginResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // json web token
    string jwt = 3;

}

// request parameters for method create_account
message CreateAccountRequest {
    // name for account
    string account_name = 1;
    // long name for account
    string account_long_name = 2;
    // account_type
    int32 account_type = 3;
    // account address line 1
    string address1 = 4;
    // account address line 2
    string address2 = 5;
    // account address city
    string city = 6;
    // account address state
    string state = 7;
    // account address postal or zip code
    string postal_code = 8;
    // account address country code
    string country_code = 9;
    // account phone number
    string phone = 10;
    // email address
    string email = 11;

}

// response parameters for method create_account
message CreateAccountResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // version of this record
    int32 version = 3;
    // unique identifier for an MService account
    int64 account_id = 4;

}

// request parameters for method update_account
message UpdateAccountRequest {
    // unique identifier for an MService account
    int64 account_id = 1;
    // version of this record
    int32 version = 2;
    // name for account
    string account_name = 3;
    // long name for account
    string account_long_name = 4;
    // account_type
    int32 account_type = 5;
    // account address line 1
    string address1 = 6;
    // account address line 2
    string address2 = 7;
    // account address city
    string city = 8;
    // account address state
    string state = 9;
    // account address postal or zip code
    string postal_code = 10;
    // account address country code
    string country_code = 11;
    // account phone number
    string phone = 12;
    // email address
    string email = 13;

}

// response parameters for method update_account
message UpdateAccountResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // version of this record
    int32 version = 3;

}

// request parameters for method delete_account
message DeleteAccountRequest {
    // unique identifier for an MService account
    int64 account_id = 1;
    // version of this record
    int32 version = 2;

}

// response parameters for method delete_account
message DeleteAccountResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // version of this record
    int32 version = 3;

}

// request parameters for method get_account_by_id
message GetAccountByIdRequest {
    // unique identifier for an MService account
    int64 account_id = 1;

}

// response parameters for method get_account_by_id
message GetAccountByIdResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // single account object
    Account account = 3;

}

// request parameters for method get_account_by_name
message GetAccountByNameRequest {
    // name for account
    string account_name = 1;

}

// response parameters for method get_account_by_name
message GetAccountByNameResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // single account object
    Account account = 3;

}

// request parameters for method get_account_names
message GetAccountNamesRequest {
    // placeholder param to avoid empty message
    int32 dummy_param = 1;

}

// response parameters for method get_account_names
message GetAccountNamesResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // name for account
    repeated string account_name = 3;

}

// request parameters for method create_account_user
message CreateAccountUserRequest {
    // unique identifier for an MService account
    int64 account_id = 1;
    // email address
    string email = 2;
    // account user full name
    string user_full_name = 3;
    // type of account user
    int32 user_type = 4;
    // account user encrypted password hash
    string password_enc = 5;

}

// response parameters for method create_account_user
message CreateAccountUserResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // version of this record
    int32 version = 3;
    // unique identifier for an MService account user
    int64 user_id = 4;

}

// request parameters for method update_account_user
message UpdateAccountUserRequest {
    // unique identifier for an MService account user
    int64 user_id = 1;
    // version of this record
    int32 version = 2;
    // email address
    string email = 3;
    // account user full name
    string user_full_name = 4;
    // type of account user
    int32 user_type = 5;

}

// response parameters for method update_account_user
message UpdateAccountUserResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // version of this record
    int32 version = 3;

}

// request parameters for method update_account_user_password
message UpdateAccountUserPasswordRequest {
    // unique identifier for an MService account user
    int64 user_id = 1;
    // version of this record
    int32 version = 2;
    // old password fro password change
    string password_old = 3;
    // account user encrypted password hash
    string password_enc = 4;

}

// response parameters for method update_account_user_password
message UpdateAccountUserPasswordResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // version of this record
    int32 version = 3;

}

// request parameters for method delete_account_user
message DeleteAccountUserRequest {
    // unique identifier for an MService account user
    int64 user_id = 1;
    // version of this record
    int32 version = 2;

}

// response parameters for method delete_account_user
message DeleteAccountUserResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // version of this record
    int32 version = 3;

}

// request parameters for method get_account_user_by_id
message GetAccountUserByIdRequest {
    // unique identifier for an MService account user
    int64 user_id = 1;

}

// response parameters for method get_account_user_by_id
message GetAccountUserByIdResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // single account user object
    AccountUser account_user = 3;

}

// request parameters for method get_account_user_by_email
message GetAccountUserByEmailRequest {
    // name for account
    string account_name = 1;
    // email address
    string email = 2;

}

// response parameters for method get_account_user_by_email
message GetAccountUserByEmailResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // single account user object
    AccountUser account_user = 3;

}

// request parameters for method get_account_users
message GetAccountUsersRequest {
    // name for account
    string account_name = 1;

}

// response parameters for method get_account_users
message GetAccountUsersResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // list of account user objects
    repeated AccountUser account_users = 3;

}

// request parameters for method create_claim_name
message CreateClaimNameRequest {
    // claim name
    string claim_name = 1;
    // claim description
    string claim_description = 2;

}

// response parameters for method create_claim_name
message CreateClaimNameResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // version of this record
    int32 version = 3;
    // unique identifier for an MService claim name
    int64 claim_name_id = 4;

}

// request parameters for method update_claim_name
message UpdateClaimNameRequest {
    // unique identifier for an MService claim name
    int64 claim_name_id = 1;
    // version of this record
    int32 version = 2;
    // claim name
    string claim_name = 3;
    // claim description
    string claim_description = 4;

}

// response parameters for method update_claim_name
message UpdateClaimNameResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // version of this record
    int32 version = 3;

}

// request parameters for method delete_claim_name
message DeleteClaimNameRequest {
    // unique identifier for an MService claim name
    int64 claim_name_id = 1;
    // version of this record
    int32 version = 2;

}

// response parameters for method delete_claim_name
message DeleteClaimNameResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // version of this record
    int32 version = 3;

}

// request parameters for method get_claim_names
message GetClaimNamesRequest {
    // placeholder param to avoid empty message
    int32 dummy_param = 1;

}

// response parameters for method get_claim_names
message GetClaimNamesResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // list of claim objects
    repeated Claim claims = 3;

}

// request parameters for method create_claim_value
message CreateClaimValueRequest {
    // unique identifier for an MService claim name
    int64 claim_name_id = 1;
    // claim value
    string claim_val = 2;
    // claim value description
    string claim_value_description = 3;

}

// response parameters for method create_claim_value
message CreateClaimValueResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // version of this record
    int32 version = 3;
    // unique identifier for an MService claim value
    int64 claim_value_id = 4;

}

// request parameters for method update_claim_value
message UpdateClaimValueRequest {
    // unique identifier for an MService claim value
    int64 claim_value_id = 1;
    // version of this record
    int32 version = 2;
    // claim value
    string claim_val = 3;
    // claim value description
    string claim_value_description = 4;

}

// response parameters for method update_claim_value
message UpdateClaimValueResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // version of this record
    int32 version = 3;

}

// request parameters for method delete_claim_value
message DeleteClaimValueRequest {
    // unique identifier for an MService claim value
    int64 claim_value_id = 1;
    // version of this record
    int32 version = 2;

}

// response parameters for method delete_claim_value
message DeleteClaimValueResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // version of this record
    int32 version = 3;

}

// request parameters for method get_claim_value_by_id
message GetClaimValueByIdRequest {
    // unique identifier for an MService claim value
    int64 claim_value_id = 1;

}

// response parameters for method get_claim_value_by_id
message GetClaimValueByIdResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // single claim value object
    ClaimValue claim_value = 3;

}

// request parameters for method get_claim_values_by_name_id
message GetClaimValuesByNameIdRequest {
    // unique identifier for an MService claim name
    int64 claim_name_id = 1;

}

// response parameters for method get_claim_values_by_name_id
message GetClaimValuesByNameIdResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // single claim value object
    repeated ClaimValue claim_value = 3;

}

// request parameters for method get_claim_values
message GetClaimValuesRequest {
    // placeholder param to avoid empty message
    int32 dummy_param = 1;

}

// response parameters for method get_claim_values
message GetClaimValuesResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // single claim value object
    repeated ClaimValue claim_value = 3;

}

// request parameters for method create_account_role
message CreateAccountRoleRequest {
    // unique identifier for an MService account
    int64 account_id = 1;
    // descriptive name for role
    string role_name = 2;

}

// response parameters for method create_account_role
message CreateAccountRoleResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // version of this record
    int32 version = 3;
    // unique identifier for an MService account role
    int64 role_id = 4;

}

// request parameters for method update_account_role
message UpdateAccountRoleRequest {
    // unique identifier for an MService account role
    int64 role_id = 1;
    // version of this record
    int32 version = 2;
    // descriptive name for role
    string role_name = 3;

}

// response parameters for method update_account_role
message UpdateAccountRoleResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // version of this record
    int32 version = 3;

}

// request parameters for method delete_account_role
message DeleteAccountRoleRequest {
    // unique identifier for an MService account role
    int64 role_id = 1;
    // version of this record
    int32 version = 2;

}

// response parameters for method delete_account_role
message DeleteAccountRoleResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // version of this record
    int32 version = 3;

}

// request parameters for method get_account_role_by_id
message GetAccountRoleByIdRequest {
    // unique identifier for an MService account role
    int64 role_id = 1;

}

// response parameters for method get_account_role_by_id
message GetAccountRoleByIdResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // single account role object
    AccountRole account_role = 3;

}

// request parameters for method get_account_roles
message GetAccountRolesRequest {
    // unique identifier for an MService account
    int64 account_id = 1;

}

// response parameters for method get_account_roles
message GetAccountRolesResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // list of account role objects
    repeated AccountRole account_roles = 3;

}

// request parameters for method add_user_to_role
message AddUserToRoleRequest {
    // unique identifier for an MService account user
    int64 user_id = 1;
    // unique identifier for an MService account role
    int64 role_id = 2;

}

// response parameters for method add_user_to_role
message AddUserToRoleResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;

}

// request parameters for method remove_user_from_role
message RemoveUserFromRoleRequest {
    // unique identifier for an MService account user
    int64 user_id = 1;
    // unique identifier for an MService account role
    int64 role_id = 2;

}

// response parameters for method remove_user_from_role
message RemoveUserFromRoleResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;

}

// request parameters for method add_claim_to_role
message AddClaimToRoleRequest {
    // unique identifier for an MService claim value
    int64 claim_value_id = 1;
    // unique identifier for an MService account role
    int64 role_id = 2;

}

// response parameters for method add_claim_to_role
message AddClaimToRoleResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;

}

// request parameters for method remove_claim_from_role
message RemoveClaimFromRoleRequest {
    // unique identifier for an MService claim value
    int64 claim_value_id = 1;
    // unique identifier for an MService account role
    int64 role_id = 2;

}

// response parameters for method remove_claim_from_role
message RemoveClaimFromRoleResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;

}

// request parameters for method get_server_version
message GetServerVersionRequest {
    // placeholder param to avoid empty message
    int32 dummy_param = 1;

}

// response parameters for method get_server_version
message GetServerVersionResponse {
    // method result code
    int32 error_code = 1;
    // text error message
    string error_message = 2;
    // version level of server
    string server_version = 3;
    // server uptime in seconds
    int64 server_uptime = 4;

}



