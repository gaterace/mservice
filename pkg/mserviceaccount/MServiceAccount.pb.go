// Copyright 2019-2023 Demian Harvill
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: MServiceAccount.proto

package mserviceaccount

import (
	dml "github.com/gaterace/dml-go/pkg/dml"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MService account entity
type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService account
	AccountId int64 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,3,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// name for account
	AccountName string `protobuf:"bytes,7,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	// long name for account
	AccountLongName string `protobuf:"bytes,8,opt,name=account_long_name,json=accountLongName,proto3" json:"account_long_name,omitempty"`
	// account_type
	AccountType int32 `protobuf:"varint,9,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
	// account address line 1
	Address1 string `protobuf:"bytes,10,opt,name=address1,proto3" json:"address1,omitempty"`
	// account address line 2
	Address2 string `protobuf:"bytes,11,opt,name=address2,proto3" json:"address2,omitempty"`
	// account address city
	City string `protobuf:"bytes,12,opt,name=city,proto3" json:"city,omitempty"`
	// account address state
	State string `protobuf:"bytes,13,opt,name=state,proto3" json:"state,omitempty"`
	// account address postal or zip code
	PostalCode string `protobuf:"bytes,14,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	// account address country code
	CountryCode string `protobuf:"bytes,15,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	// account phone number
	Phone string `protobuf:"bytes,16,opt,name=phone,proto3" json:"phone,omitempty"`
	// email address
	Email string `protobuf:"bytes,17,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{0}
}

func (x *Account) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *Account) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Account) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *Account) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *Account) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Account) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Account) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *Account) GetAccountLongName() string {
	if x != nil {
		return x.AccountLongName
	}
	return ""
}

func (x *Account) GetAccountType() int32 {
	if x != nil {
		return x.AccountType
	}
	return 0
}

func (x *Account) GetAddress1() string {
	if x != nil {
		return x.Address1
	}
	return ""
}

func (x *Account) GetAddress2() string {
	if x != nil {
		return x.Address2
	}
	return ""
}

func (x *Account) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Account) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Account) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *Account) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *Account) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Account) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// MService account user entity
type AccountUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService account user
	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,3,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// unique identifier for an MService account
	AccountId int64 `protobuf:"varint,7,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// email address
	Email string `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	// account user full name
	UserFullName string `protobuf:"bytes,9,opt,name=user_full_name,json=userFullName,proto3" json:"user_full_name,omitempty"`
	// type of account user
	UserType int32 `protobuf:"varint,10,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
	// account user encrypted password hash
	PasswordEnc string `protobuf:"bytes,11,opt,name=password_enc,json=passwordEnc,proto3" json:"password_enc,omitempty"`
	// list of account role objects
	AccountRoles []*AccountRole `protobuf:"bytes,12,rep,name=account_roles,json=accountRoles,proto3" json:"account_roles,omitempty"`
}

func (x *AccountUser) Reset() {
	*x = AccountUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUser) ProtoMessage() {}

func (x *AccountUser) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUser.ProtoReflect.Descriptor instead.
func (*AccountUser) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{1}
}

func (x *AccountUser) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AccountUser) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AccountUser) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *AccountUser) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *AccountUser) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *AccountUser) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *AccountUser) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *AccountUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AccountUser) GetUserFullName() string {
	if x != nil {
		return x.UserFullName
	}
	return ""
}

func (x *AccountUser) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *AccountUser) GetPasswordEnc() string {
	if x != nil {
		return x.PasswordEnc
	}
	return ""
}

func (x *AccountUser) GetAccountRoles() []*AccountRole {
	if x != nil {
		return x.AccountRoles
	}
	return nil
}

// MService account role entity
type AccountRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService account role
	RoleId int64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,3,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// unique identifier for an MService account
	AccountId int64 `protobuf:"varint,7,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// descriptive name for role
	RoleName string `protobuf:"bytes,8,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	// list of claim value objects
	ClaimValues []*ClaimValue `protobuf:"bytes,9,rep,name=claim_values,json=claimValues,proto3" json:"claim_values,omitempty"`
}

func (x *AccountRole) Reset() {
	*x = AccountRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRole) ProtoMessage() {}

func (x *AccountRole) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRole.ProtoReflect.Descriptor instead.
func (*AccountRole) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{2}
}

func (x *AccountRole) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *AccountRole) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AccountRole) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *AccountRole) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *AccountRole) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *AccountRole) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *AccountRole) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *AccountRole) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *AccountRole) GetClaimValues() []*ClaimValue {
	if x != nil {
		return x.ClaimValues
	}
	return nil
}

// MService account user to role map
type AccountRoleMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService account user
	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// unique identifier for an MService account role
	RoleId int64 `protobuf:"varint,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
}

func (x *AccountRoleMap) Reset() {
	*x = AccountRoleMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountRoleMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRoleMap) ProtoMessage() {}

func (x *AccountRoleMap) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRoleMap.ProtoReflect.Descriptor instead.
func (*AccountRoleMap) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{3}
}

func (x *AccountRoleMap) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AccountRoleMap) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *AccountRoleMap) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AccountRoleMap) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *AccountRoleMap) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

// MService claim name entity
type Claim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService claim name
	ClaimNameId int64 `protobuf:"varint,1,opt,name=claim_name_id,json=claimNameId,proto3" json:"claim_name_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,3,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// claim name
	ClaimName string `protobuf:"bytes,7,opt,name=claim_name,json=claimName,proto3" json:"claim_name,omitempty"`
	// claim description
	ClaimDescription string `protobuf:"bytes,8,opt,name=claim_description,json=claimDescription,proto3" json:"claim_description,omitempty"`
}

func (x *Claim) Reset() {
	*x = Claim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Claim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Claim) ProtoMessage() {}

func (x *Claim) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Claim.ProtoReflect.Descriptor instead.
func (*Claim) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{4}
}

func (x *Claim) GetClaimNameId() int64 {
	if x != nil {
		return x.ClaimNameId
	}
	return 0
}

func (x *Claim) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Claim) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *Claim) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *Claim) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Claim) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Claim) GetClaimName() string {
	if x != nil {
		return x.ClaimName
	}
	return ""
}

func (x *Claim) GetClaimDescription() string {
	if x != nil {
		return x.ClaimDescription
	}
	return ""
}

// MService claim value entity
type ClaimValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService claim value
	ClaimValueId int64 `protobuf:"varint,1,opt,name=claim_value_id,json=claimValueId,proto3" json:"claim_value_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,3,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// unique identifier for an MService claim name
	ClaimNameId int64 `protobuf:"varint,7,opt,name=claim_name_id,json=claimNameId,proto3" json:"claim_name_id,omitempty"`
	// claim value
	ClaimVal string `protobuf:"bytes,8,opt,name=claim_val,json=claimVal,proto3" json:"claim_val,omitempty"`
	// claim value description
	ClaimValueDescription string `protobuf:"bytes,9,opt,name=claim_value_description,json=claimValueDescription,proto3" json:"claim_value_description,omitempty"`
	// single claim object
	Claim *Claim `protobuf:"bytes,10,opt,name=claim,proto3" json:"claim,omitempty"`
}

func (x *ClaimValue) Reset() {
	*x = ClaimValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimValue) ProtoMessage() {}

func (x *ClaimValue) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimValue.ProtoReflect.Descriptor instead.
func (*ClaimValue) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{5}
}

func (x *ClaimValue) GetClaimValueId() int64 {
	if x != nil {
		return x.ClaimValueId
	}
	return 0
}

func (x *ClaimValue) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *ClaimValue) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *ClaimValue) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *ClaimValue) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *ClaimValue) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ClaimValue) GetClaimNameId() int64 {
	if x != nil {
		return x.ClaimNameId
	}
	return 0
}

func (x *ClaimValue) GetClaimVal() string {
	if x != nil {
		return x.ClaimVal
	}
	return ""
}

func (x *ClaimValue) GetClaimValueDescription() string {
	if x != nil {
		return x.ClaimValueDescription
	}
	return ""
}

func (x *ClaimValue) GetClaim() *Claim {
	if x != nil {
		return x.Claim
	}
	return nil
}

type RoleClaimMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService account role
	RoleId int64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// unique identifier for an MService claim value
	ClaimValueId int64 `protobuf:"varint,2,opt,name=claim_value_id,json=claimValueId,proto3" json:"claim_value_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
}

func (x *RoleClaimMap) Reset() {
	*x = RoleClaimMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleClaimMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleClaimMap) ProtoMessage() {}

func (x *RoleClaimMap) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleClaimMap.ProtoReflect.Descriptor instead.
func (*RoleClaimMap) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{6}
}

func (x *RoleClaimMap) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RoleClaimMap) GetClaimValueId() int64 {
	if x != nil {
		return x.ClaimValueId
	}
	return 0
}

func (x *RoleClaimMap) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *RoleClaimMap) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *RoleClaimMap) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

// request parameters for method login
type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name for account
	AccountName string `protobuf:"bytes,1,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	// email address
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// password for login
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{7}
}

func (x *LoginRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *LoginRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// response parameters for method login
type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// json web token
	Jwt string `protobuf:"bytes,3,opt,name=jwt,proto3" json:"jwt,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{8}
}

func (x *LoginResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *LoginResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *LoginResponse) GetJwt() string {
	if x != nil {
		return x.Jwt
	}
	return ""
}

// request parameters for method create_account
type CreateAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name for account
	AccountName string `protobuf:"bytes,1,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	// long name for account
	AccountLongName string `protobuf:"bytes,2,opt,name=account_long_name,json=accountLongName,proto3" json:"account_long_name,omitempty"`
	// account_type
	AccountType int32 `protobuf:"varint,3,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
	// account address line 1
	Address1 string `protobuf:"bytes,4,opt,name=address1,proto3" json:"address1,omitempty"`
	// account address line 2
	Address2 string `protobuf:"bytes,5,opt,name=address2,proto3" json:"address2,omitempty"`
	// account address city
	City string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	// account address state
	State string `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`
	// account address postal or zip code
	PostalCode string `protobuf:"bytes,8,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	// account address country code
	CountryCode string `protobuf:"bytes,9,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	// account phone number
	Phone string `protobuf:"bytes,10,opt,name=phone,proto3" json:"phone,omitempty"`
	// email address
	Email string `protobuf:"bytes,11,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *CreateAccountRequest) Reset() {
	*x = CreateAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountRequest) ProtoMessage() {}

func (x *CreateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateAccountRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{9}
}

func (x *CreateAccountRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *CreateAccountRequest) GetAccountLongName() string {
	if x != nil {
		return x.AccountLongName
	}
	return ""
}

func (x *CreateAccountRequest) GetAccountType() int32 {
	if x != nil {
		return x.AccountType
	}
	return 0
}

func (x *CreateAccountRequest) GetAddress1() string {
	if x != nil {
		return x.Address1
	}
	return ""
}

func (x *CreateAccountRequest) GetAddress2() string {
	if x != nil {
		return x.Address2
	}
	return ""
}

func (x *CreateAccountRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CreateAccountRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *CreateAccountRequest) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *CreateAccountRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *CreateAccountRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateAccountRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// response parameters for method create_account
type CreateAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// unique identifier for an MService account
	AccountId int64 `protobuf:"varint,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *CreateAccountResponse) Reset() {
	*x = CreateAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountResponse) ProtoMessage() {}

func (x *CreateAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateAccountResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{10}
}

func (x *CreateAccountResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CreateAccountResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateAccountResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CreateAccountResponse) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

// request parameters for method update_account
type UpdateAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService account
	AccountId int64 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// name for account
	AccountName string `protobuf:"bytes,3,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	// long name for account
	AccountLongName string `protobuf:"bytes,4,opt,name=account_long_name,json=accountLongName,proto3" json:"account_long_name,omitempty"`
	// account_type
	AccountType int32 `protobuf:"varint,5,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
	// account address line 1
	Address1 string `protobuf:"bytes,6,opt,name=address1,proto3" json:"address1,omitempty"`
	// account address line 2
	Address2 string `protobuf:"bytes,7,opt,name=address2,proto3" json:"address2,omitempty"`
	// account address city
	City string `protobuf:"bytes,8,opt,name=city,proto3" json:"city,omitempty"`
	// account address state
	State string `protobuf:"bytes,9,opt,name=state,proto3" json:"state,omitempty"`
	// account address postal or zip code
	PostalCode string `protobuf:"bytes,10,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	// account address country code
	CountryCode string `protobuf:"bytes,11,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	// account phone number
	Phone string `protobuf:"bytes,12,opt,name=phone,proto3" json:"phone,omitempty"`
	// email address
	Email string `protobuf:"bytes,13,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *UpdateAccountRequest) Reset() {
	*x = UpdateAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountRequest) ProtoMessage() {}

func (x *UpdateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccountRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateAccountRequest) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *UpdateAccountRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateAccountRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *UpdateAccountRequest) GetAccountLongName() string {
	if x != nil {
		return x.AccountLongName
	}
	return ""
}

func (x *UpdateAccountRequest) GetAccountType() int32 {
	if x != nil {
		return x.AccountType
	}
	return 0
}

func (x *UpdateAccountRequest) GetAddress1() string {
	if x != nil {
		return x.Address1
	}
	return ""
}

func (x *UpdateAccountRequest) GetAddress2() string {
	if x != nil {
		return x.Address2
	}
	return ""
}

func (x *UpdateAccountRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UpdateAccountRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *UpdateAccountRequest) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *UpdateAccountRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *UpdateAccountRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateAccountRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// response parameters for method update_account
type UpdateAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateAccountResponse) Reset() {
	*x = UpdateAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountResponse) ProtoMessage() {}

func (x *UpdateAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountResponse.ProtoReflect.Descriptor instead.
func (*UpdateAccountResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateAccountResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UpdateAccountResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UpdateAccountResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method delete_account
type DeleteAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService account
	AccountId int64 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteAccountRequest) Reset() {
	*x = DeleteAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountRequest) ProtoMessage() {}

func (x *DeleteAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountRequest.ProtoReflect.Descriptor instead.
func (*DeleteAccountRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteAccountRequest) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *DeleteAccountRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// response parameters for method delete_account
type DeleteAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteAccountResponse) Reset() {
	*x = DeleteAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountResponse) ProtoMessage() {}

func (x *DeleteAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountResponse.ProtoReflect.Descriptor instead.
func (*DeleteAccountResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteAccountResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *DeleteAccountResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DeleteAccountResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method get_account_by_id
type GetAccountByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService account
	AccountId int64 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *GetAccountByIdRequest) Reset() {
	*x = GetAccountByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountByIdRequest) ProtoMessage() {}

func (x *GetAccountByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountByIdRequest.ProtoReflect.Descriptor instead.
func (*GetAccountByIdRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{15}
}

func (x *GetAccountByIdRequest) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

// response parameters for method get_account_by_id
type GetAccountByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// single account object
	Account *Account `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *GetAccountByIdResponse) Reset() {
	*x = GetAccountByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountByIdResponse) ProtoMessage() {}

func (x *GetAccountByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountByIdResponse.ProtoReflect.Descriptor instead.
func (*GetAccountByIdResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{16}
}

func (x *GetAccountByIdResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetAccountByIdResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetAccountByIdResponse) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

// request parameters for method get_account_by_name
type GetAccountByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name for account
	AccountName string `protobuf:"bytes,1,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
}

func (x *GetAccountByNameRequest) Reset() {
	*x = GetAccountByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountByNameRequest) ProtoMessage() {}

func (x *GetAccountByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountByNameRequest.ProtoReflect.Descriptor instead.
func (*GetAccountByNameRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{17}
}

func (x *GetAccountByNameRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

// response parameters for method get_account_by_name
type GetAccountByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// single account object
	Account *Account `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *GetAccountByNameResponse) Reset() {
	*x = GetAccountByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountByNameResponse) ProtoMessage() {}

func (x *GetAccountByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountByNameResponse.ProtoReflect.Descriptor instead.
func (*GetAccountByNameResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{18}
}

func (x *GetAccountByNameResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetAccountByNameResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetAccountByNameResponse) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

// request parameters for method get_account_names
type GetAccountNamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// placeholder param to avoid empty message
	DummyParam int32 `protobuf:"varint,1,opt,name=dummy_param,json=dummyParam,proto3" json:"dummy_param,omitempty"`
}

func (x *GetAccountNamesRequest) Reset() {
	*x = GetAccountNamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountNamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountNamesRequest) ProtoMessage() {}

func (x *GetAccountNamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountNamesRequest.ProtoReflect.Descriptor instead.
func (*GetAccountNamesRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{19}
}

func (x *GetAccountNamesRequest) GetDummyParam() int32 {
	if x != nil {
		return x.DummyParam
	}
	return 0
}

// response parameters for method get_account_names
type GetAccountNamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// name for account
	AccountName []string `protobuf:"bytes,3,rep,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
}

func (x *GetAccountNamesResponse) Reset() {
	*x = GetAccountNamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountNamesResponse) ProtoMessage() {}

func (x *GetAccountNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountNamesResponse.ProtoReflect.Descriptor instead.
func (*GetAccountNamesResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{20}
}

func (x *GetAccountNamesResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetAccountNamesResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetAccountNamesResponse) GetAccountName() []string {
	if x != nil {
		return x.AccountName
	}
	return nil
}

// request parameters for method create_account_user
type CreateAccountUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService account
	AccountId int64 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// email address
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// account user full name
	UserFullName string `protobuf:"bytes,3,opt,name=user_full_name,json=userFullName,proto3" json:"user_full_name,omitempty"`
	// type of account user
	UserType int32 `protobuf:"varint,4,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
	// account user encrypted password hash
	PasswordEnc string `protobuf:"bytes,5,opt,name=password_enc,json=passwordEnc,proto3" json:"password_enc,omitempty"`
}

func (x *CreateAccountUserRequest) Reset() {
	*x = CreateAccountUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountUserRequest) ProtoMessage() {}

func (x *CreateAccountUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountUserRequest.ProtoReflect.Descriptor instead.
func (*CreateAccountUserRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{21}
}

func (x *CreateAccountUserRequest) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *CreateAccountUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateAccountUserRequest) GetUserFullName() string {
	if x != nil {
		return x.UserFullName
	}
	return ""
}

func (x *CreateAccountUserRequest) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *CreateAccountUserRequest) GetPasswordEnc() string {
	if x != nil {
		return x.PasswordEnc
	}
	return ""
}

// response parameters for method create_account_user
type CreateAccountUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// unique identifier for an MService account user
	UserId int64 `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CreateAccountUserResponse) Reset() {
	*x = CreateAccountUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountUserResponse) ProtoMessage() {}

func (x *CreateAccountUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountUserResponse.ProtoReflect.Descriptor instead.
func (*CreateAccountUserResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{22}
}

func (x *CreateAccountUserResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CreateAccountUserResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateAccountUserResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CreateAccountUserResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// request parameters for method update_account_user
type UpdateAccountUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService account user
	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// email address
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// account user full name
	UserFullName string `protobuf:"bytes,4,opt,name=user_full_name,json=userFullName,proto3" json:"user_full_name,omitempty"`
	// type of account user
	UserType int32 `protobuf:"varint,5,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
}

func (x *UpdateAccountUserRequest) Reset() {
	*x = UpdateAccountUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountUserRequest) ProtoMessage() {}

func (x *UpdateAccountUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccountUserRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateAccountUserRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateAccountUserRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateAccountUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateAccountUserRequest) GetUserFullName() string {
	if x != nil {
		return x.UserFullName
	}
	return ""
}

func (x *UpdateAccountUserRequest) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

// response parameters for method update_account_user
type UpdateAccountUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateAccountUserResponse) Reset() {
	*x = UpdateAccountUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountUserResponse) ProtoMessage() {}

func (x *UpdateAccountUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountUserResponse.ProtoReflect.Descriptor instead.
func (*UpdateAccountUserResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateAccountUserResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UpdateAccountUserResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UpdateAccountUserResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method update_account_user_password
type UpdateAccountUserPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService account user
	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// old password fro password change
	PasswordOld string `protobuf:"bytes,3,opt,name=password_old,json=passwordOld,proto3" json:"password_old,omitempty"`
	// account user encrypted password hash
	PasswordEnc string `protobuf:"bytes,4,opt,name=password_enc,json=passwordEnc,proto3" json:"password_enc,omitempty"`
}

func (x *UpdateAccountUserPasswordRequest) Reset() {
	*x = UpdateAccountUserPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountUserPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountUserPasswordRequest) ProtoMessage() {}

func (x *UpdateAccountUserPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountUserPasswordRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccountUserPasswordRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateAccountUserPasswordRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateAccountUserPasswordRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateAccountUserPasswordRequest) GetPasswordOld() string {
	if x != nil {
		return x.PasswordOld
	}
	return ""
}

func (x *UpdateAccountUserPasswordRequest) GetPasswordEnc() string {
	if x != nil {
		return x.PasswordEnc
	}
	return ""
}

// response parameters for method update_account_user_password
type UpdateAccountUserPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateAccountUserPasswordResponse) Reset() {
	*x = UpdateAccountUserPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountUserPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountUserPasswordResponse) ProtoMessage() {}

func (x *UpdateAccountUserPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountUserPasswordResponse.ProtoReflect.Descriptor instead.
func (*UpdateAccountUserPasswordResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateAccountUserPasswordResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UpdateAccountUserPasswordResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UpdateAccountUserPasswordResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method reset_account_user_password
type ResetAccountUserPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService account user
	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// account user encrypted password hash
	PasswordEnc string `protobuf:"bytes,3,opt,name=password_enc,json=passwordEnc,proto3" json:"password_enc,omitempty"`
}

func (x *ResetAccountUserPasswordRequest) Reset() {
	*x = ResetAccountUserPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetAccountUserPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetAccountUserPasswordRequest) ProtoMessage() {}

func (x *ResetAccountUserPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetAccountUserPasswordRequest.ProtoReflect.Descriptor instead.
func (*ResetAccountUserPasswordRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{27}
}

func (x *ResetAccountUserPasswordRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ResetAccountUserPasswordRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ResetAccountUserPasswordRequest) GetPasswordEnc() string {
	if x != nil {
		return x.PasswordEnc
	}
	return ""
}

// response parameters for method reset_account_user_password
type ResetAccountUserPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ResetAccountUserPasswordResponse) Reset() {
	*x = ResetAccountUserPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetAccountUserPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetAccountUserPasswordResponse) ProtoMessage() {}

func (x *ResetAccountUserPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetAccountUserPasswordResponse.ProtoReflect.Descriptor instead.
func (*ResetAccountUserPasswordResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{28}
}

func (x *ResetAccountUserPasswordResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *ResetAccountUserPasswordResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ResetAccountUserPasswordResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method delete_account_user
type DeleteAccountUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService account user
	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteAccountUserRequest) Reset() {
	*x = DeleteAccountUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccountUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountUserRequest) ProtoMessage() {}

func (x *DeleteAccountUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteAccountUserRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteAccountUserRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteAccountUserRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// response parameters for method delete_account_user
type DeleteAccountUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteAccountUserResponse) Reset() {
	*x = DeleteAccountUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccountUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountUserResponse) ProtoMessage() {}

func (x *DeleteAccountUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountUserResponse.ProtoReflect.Descriptor instead.
func (*DeleteAccountUserResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteAccountUserResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *DeleteAccountUserResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DeleteAccountUserResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method get_account_user_by_id
type GetAccountUserByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService account user
	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetAccountUserByIdRequest) Reset() {
	*x = GetAccountUserByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountUserByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountUserByIdRequest) ProtoMessage() {}

func (x *GetAccountUserByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountUserByIdRequest.ProtoReflect.Descriptor instead.
func (*GetAccountUserByIdRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{31}
}

func (x *GetAccountUserByIdRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// response parameters for method get_account_user_by_id
type GetAccountUserByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// single account user object
	AccountUser *AccountUser `protobuf:"bytes,3,opt,name=account_user,json=accountUser,proto3" json:"account_user,omitempty"`
}

func (x *GetAccountUserByIdResponse) Reset() {
	*x = GetAccountUserByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountUserByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountUserByIdResponse) ProtoMessage() {}

func (x *GetAccountUserByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountUserByIdResponse.ProtoReflect.Descriptor instead.
func (*GetAccountUserByIdResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{32}
}

func (x *GetAccountUserByIdResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetAccountUserByIdResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetAccountUserByIdResponse) GetAccountUser() *AccountUser {
	if x != nil {
		return x.AccountUser
	}
	return nil
}

// request parameters for method get_account_user_by_email
type GetAccountUserByEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name for account
	AccountName string `protobuf:"bytes,1,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	// email address
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *GetAccountUserByEmailRequest) Reset() {
	*x = GetAccountUserByEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountUserByEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountUserByEmailRequest) ProtoMessage() {}

func (x *GetAccountUserByEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountUserByEmailRequest.ProtoReflect.Descriptor instead.
func (*GetAccountUserByEmailRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{33}
}

func (x *GetAccountUserByEmailRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *GetAccountUserByEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// response parameters for method get_account_user_by_email
type GetAccountUserByEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// single account user object
	AccountUser *AccountUser `protobuf:"bytes,3,opt,name=account_user,json=accountUser,proto3" json:"account_user,omitempty"`
}

func (x *GetAccountUserByEmailResponse) Reset() {
	*x = GetAccountUserByEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountUserByEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountUserByEmailResponse) ProtoMessage() {}

func (x *GetAccountUserByEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountUserByEmailResponse.ProtoReflect.Descriptor instead.
func (*GetAccountUserByEmailResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{34}
}

func (x *GetAccountUserByEmailResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetAccountUserByEmailResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetAccountUserByEmailResponse) GetAccountUser() *AccountUser {
	if x != nil {
		return x.AccountUser
	}
	return nil
}

// request parameters for method get_account_users
type GetAccountUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name for account
	AccountName string `protobuf:"bytes,1,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
}

func (x *GetAccountUsersRequest) Reset() {
	*x = GetAccountUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountUsersRequest) ProtoMessage() {}

func (x *GetAccountUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountUsersRequest.ProtoReflect.Descriptor instead.
func (*GetAccountUsersRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{35}
}

func (x *GetAccountUsersRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

// response parameters for method get_account_users
type GetAccountUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// list of account user objects
	AccountUsers []*AccountUser `protobuf:"bytes,3,rep,name=account_users,json=accountUsers,proto3" json:"account_users,omitempty"`
}

func (x *GetAccountUsersResponse) Reset() {
	*x = GetAccountUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountUsersResponse) ProtoMessage() {}

func (x *GetAccountUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountUsersResponse.ProtoReflect.Descriptor instead.
func (*GetAccountUsersResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{36}
}

func (x *GetAccountUsersResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetAccountUsersResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetAccountUsersResponse) GetAccountUsers() []*AccountUser {
	if x != nil {
		return x.AccountUsers
	}
	return nil
}

// request parameters for method create_claim_name
type CreateClaimNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// claim name
	ClaimName string `protobuf:"bytes,1,opt,name=claim_name,json=claimName,proto3" json:"claim_name,omitempty"`
	// claim description
	ClaimDescription string `protobuf:"bytes,2,opt,name=claim_description,json=claimDescription,proto3" json:"claim_description,omitempty"`
}

func (x *CreateClaimNameRequest) Reset() {
	*x = CreateClaimNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClaimNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClaimNameRequest) ProtoMessage() {}

func (x *CreateClaimNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClaimNameRequest.ProtoReflect.Descriptor instead.
func (*CreateClaimNameRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{37}
}

func (x *CreateClaimNameRequest) GetClaimName() string {
	if x != nil {
		return x.ClaimName
	}
	return ""
}

func (x *CreateClaimNameRequest) GetClaimDescription() string {
	if x != nil {
		return x.ClaimDescription
	}
	return ""
}

// response parameters for method create_claim_name
type CreateClaimNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// unique identifier for an MService claim name
	ClaimNameId int64 `protobuf:"varint,4,opt,name=claim_name_id,json=claimNameId,proto3" json:"claim_name_id,omitempty"`
}

func (x *CreateClaimNameResponse) Reset() {
	*x = CreateClaimNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClaimNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClaimNameResponse) ProtoMessage() {}

func (x *CreateClaimNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClaimNameResponse.ProtoReflect.Descriptor instead.
func (*CreateClaimNameResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{38}
}

func (x *CreateClaimNameResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CreateClaimNameResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateClaimNameResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CreateClaimNameResponse) GetClaimNameId() int64 {
	if x != nil {
		return x.ClaimNameId
	}
	return 0
}

// request parameters for method update_claim_name
type UpdateClaimNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService claim name
	ClaimNameId int64 `protobuf:"varint,1,opt,name=claim_name_id,json=claimNameId,proto3" json:"claim_name_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// claim name
	ClaimName string `protobuf:"bytes,3,opt,name=claim_name,json=claimName,proto3" json:"claim_name,omitempty"`
	// claim description
	ClaimDescription string `protobuf:"bytes,4,opt,name=claim_description,json=claimDescription,proto3" json:"claim_description,omitempty"`
}

func (x *UpdateClaimNameRequest) Reset() {
	*x = UpdateClaimNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClaimNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClaimNameRequest) ProtoMessage() {}

func (x *UpdateClaimNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClaimNameRequest.ProtoReflect.Descriptor instead.
func (*UpdateClaimNameRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateClaimNameRequest) GetClaimNameId() int64 {
	if x != nil {
		return x.ClaimNameId
	}
	return 0
}

func (x *UpdateClaimNameRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateClaimNameRequest) GetClaimName() string {
	if x != nil {
		return x.ClaimName
	}
	return ""
}

func (x *UpdateClaimNameRequest) GetClaimDescription() string {
	if x != nil {
		return x.ClaimDescription
	}
	return ""
}

// response parameters for method update_claim_name
type UpdateClaimNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateClaimNameResponse) Reset() {
	*x = UpdateClaimNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClaimNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClaimNameResponse) ProtoMessage() {}

func (x *UpdateClaimNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClaimNameResponse.ProtoReflect.Descriptor instead.
func (*UpdateClaimNameResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateClaimNameResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UpdateClaimNameResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UpdateClaimNameResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method delete_claim_name
type DeleteClaimNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService claim name
	ClaimNameId int64 `protobuf:"varint,1,opt,name=claim_name_id,json=claimNameId,proto3" json:"claim_name_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteClaimNameRequest) Reset() {
	*x = DeleteClaimNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteClaimNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClaimNameRequest) ProtoMessage() {}

func (x *DeleteClaimNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClaimNameRequest.ProtoReflect.Descriptor instead.
func (*DeleteClaimNameRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{41}
}

func (x *DeleteClaimNameRequest) GetClaimNameId() int64 {
	if x != nil {
		return x.ClaimNameId
	}
	return 0
}

func (x *DeleteClaimNameRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// response parameters for method delete_claim_name
type DeleteClaimNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteClaimNameResponse) Reset() {
	*x = DeleteClaimNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteClaimNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClaimNameResponse) ProtoMessage() {}

func (x *DeleteClaimNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClaimNameResponse.ProtoReflect.Descriptor instead.
func (*DeleteClaimNameResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{42}
}

func (x *DeleteClaimNameResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *DeleteClaimNameResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DeleteClaimNameResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method get_claim_names
type GetClaimNamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// placeholder param to avoid empty message
	DummyParam int32 `protobuf:"varint,1,opt,name=dummy_param,json=dummyParam,proto3" json:"dummy_param,omitempty"`
}

func (x *GetClaimNamesRequest) Reset() {
	*x = GetClaimNamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClaimNamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClaimNamesRequest) ProtoMessage() {}

func (x *GetClaimNamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClaimNamesRequest.ProtoReflect.Descriptor instead.
func (*GetClaimNamesRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{43}
}

func (x *GetClaimNamesRequest) GetDummyParam() int32 {
	if x != nil {
		return x.DummyParam
	}
	return 0
}

// response parameters for method get_claim_names
type GetClaimNamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// list of claim objects
	Claims []*Claim `protobuf:"bytes,3,rep,name=claims,proto3" json:"claims,omitempty"`
}

func (x *GetClaimNamesResponse) Reset() {
	*x = GetClaimNamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClaimNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClaimNamesResponse) ProtoMessage() {}

func (x *GetClaimNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClaimNamesResponse.ProtoReflect.Descriptor instead.
func (*GetClaimNamesResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{44}
}

func (x *GetClaimNamesResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetClaimNamesResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetClaimNamesResponse) GetClaims() []*Claim {
	if x != nil {
		return x.Claims
	}
	return nil
}

// request parameters for method create_claim_value
type CreateClaimValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService claim name
	ClaimNameId int64 `protobuf:"varint,1,opt,name=claim_name_id,json=claimNameId,proto3" json:"claim_name_id,omitempty"`
	// claim value
	ClaimVal string `protobuf:"bytes,2,opt,name=claim_val,json=claimVal,proto3" json:"claim_val,omitempty"`
	// claim value description
	ClaimValueDescription string `protobuf:"bytes,3,opt,name=claim_value_description,json=claimValueDescription,proto3" json:"claim_value_description,omitempty"`
}

func (x *CreateClaimValueRequest) Reset() {
	*x = CreateClaimValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClaimValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClaimValueRequest) ProtoMessage() {}

func (x *CreateClaimValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClaimValueRequest.ProtoReflect.Descriptor instead.
func (*CreateClaimValueRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{45}
}

func (x *CreateClaimValueRequest) GetClaimNameId() int64 {
	if x != nil {
		return x.ClaimNameId
	}
	return 0
}

func (x *CreateClaimValueRequest) GetClaimVal() string {
	if x != nil {
		return x.ClaimVal
	}
	return ""
}

func (x *CreateClaimValueRequest) GetClaimValueDescription() string {
	if x != nil {
		return x.ClaimValueDescription
	}
	return ""
}

// response parameters for method create_claim_value
type CreateClaimValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// unique identifier for an MService claim value
	ClaimValueId int64 `protobuf:"varint,4,opt,name=claim_value_id,json=claimValueId,proto3" json:"claim_value_id,omitempty"`
}

func (x *CreateClaimValueResponse) Reset() {
	*x = CreateClaimValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClaimValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClaimValueResponse) ProtoMessage() {}

func (x *CreateClaimValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClaimValueResponse.ProtoReflect.Descriptor instead.
func (*CreateClaimValueResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{46}
}

func (x *CreateClaimValueResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CreateClaimValueResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateClaimValueResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CreateClaimValueResponse) GetClaimValueId() int64 {
	if x != nil {
		return x.ClaimValueId
	}
	return 0
}

// request parameters for method update_claim_value
type UpdateClaimValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService claim value
	ClaimValueId int64 `protobuf:"varint,1,opt,name=claim_value_id,json=claimValueId,proto3" json:"claim_value_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// claim value
	ClaimVal string `protobuf:"bytes,3,opt,name=claim_val,json=claimVal,proto3" json:"claim_val,omitempty"`
	// claim value description
	ClaimValueDescription string `protobuf:"bytes,4,opt,name=claim_value_description,json=claimValueDescription,proto3" json:"claim_value_description,omitempty"`
}

func (x *UpdateClaimValueRequest) Reset() {
	*x = UpdateClaimValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClaimValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClaimValueRequest) ProtoMessage() {}

func (x *UpdateClaimValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClaimValueRequest.ProtoReflect.Descriptor instead.
func (*UpdateClaimValueRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{47}
}

func (x *UpdateClaimValueRequest) GetClaimValueId() int64 {
	if x != nil {
		return x.ClaimValueId
	}
	return 0
}

func (x *UpdateClaimValueRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateClaimValueRequest) GetClaimVal() string {
	if x != nil {
		return x.ClaimVal
	}
	return ""
}

func (x *UpdateClaimValueRequest) GetClaimValueDescription() string {
	if x != nil {
		return x.ClaimValueDescription
	}
	return ""
}

// response parameters for method update_claim_value
type UpdateClaimValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateClaimValueResponse) Reset() {
	*x = UpdateClaimValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClaimValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClaimValueResponse) ProtoMessage() {}

func (x *UpdateClaimValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClaimValueResponse.ProtoReflect.Descriptor instead.
func (*UpdateClaimValueResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{48}
}

func (x *UpdateClaimValueResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UpdateClaimValueResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UpdateClaimValueResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method delete_claim_value
type DeleteClaimValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService claim value
	ClaimValueId int64 `protobuf:"varint,1,opt,name=claim_value_id,json=claimValueId,proto3" json:"claim_value_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteClaimValueRequest) Reset() {
	*x = DeleteClaimValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteClaimValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClaimValueRequest) ProtoMessage() {}

func (x *DeleteClaimValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClaimValueRequest.ProtoReflect.Descriptor instead.
func (*DeleteClaimValueRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{49}
}

func (x *DeleteClaimValueRequest) GetClaimValueId() int64 {
	if x != nil {
		return x.ClaimValueId
	}
	return 0
}

func (x *DeleteClaimValueRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// response parameters for method delete_claim_value
type DeleteClaimValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteClaimValueResponse) Reset() {
	*x = DeleteClaimValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteClaimValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClaimValueResponse) ProtoMessage() {}

func (x *DeleteClaimValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClaimValueResponse.ProtoReflect.Descriptor instead.
func (*DeleteClaimValueResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{50}
}

func (x *DeleteClaimValueResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *DeleteClaimValueResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DeleteClaimValueResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method get_claim_value_by_id
type GetClaimValueByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService claim value
	ClaimValueId int64 `protobuf:"varint,1,opt,name=claim_value_id,json=claimValueId,proto3" json:"claim_value_id,omitempty"`
}

func (x *GetClaimValueByIdRequest) Reset() {
	*x = GetClaimValueByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClaimValueByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClaimValueByIdRequest) ProtoMessage() {}

func (x *GetClaimValueByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClaimValueByIdRequest.ProtoReflect.Descriptor instead.
func (*GetClaimValueByIdRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{51}
}

func (x *GetClaimValueByIdRequest) GetClaimValueId() int64 {
	if x != nil {
		return x.ClaimValueId
	}
	return 0
}

// response parameters for method get_claim_value_by_id
type GetClaimValueByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// single claim value object
	ClaimValue *ClaimValue `protobuf:"bytes,3,opt,name=claim_value,json=claimValue,proto3" json:"claim_value,omitempty"`
}

func (x *GetClaimValueByIdResponse) Reset() {
	*x = GetClaimValueByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClaimValueByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClaimValueByIdResponse) ProtoMessage() {}

func (x *GetClaimValueByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClaimValueByIdResponse.ProtoReflect.Descriptor instead.
func (*GetClaimValueByIdResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{52}
}

func (x *GetClaimValueByIdResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetClaimValueByIdResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetClaimValueByIdResponse) GetClaimValue() *ClaimValue {
	if x != nil {
		return x.ClaimValue
	}
	return nil
}

// request parameters for method get_claim_values_by_name_id
type GetClaimValuesByNameIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService claim name
	ClaimNameId int64 `protobuf:"varint,1,opt,name=claim_name_id,json=claimNameId,proto3" json:"claim_name_id,omitempty"`
}

func (x *GetClaimValuesByNameIdRequest) Reset() {
	*x = GetClaimValuesByNameIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClaimValuesByNameIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClaimValuesByNameIdRequest) ProtoMessage() {}

func (x *GetClaimValuesByNameIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClaimValuesByNameIdRequest.ProtoReflect.Descriptor instead.
func (*GetClaimValuesByNameIdRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{53}
}

func (x *GetClaimValuesByNameIdRequest) GetClaimNameId() int64 {
	if x != nil {
		return x.ClaimNameId
	}
	return 0
}

// response parameters for method get_claim_values_by_name_id
type GetClaimValuesByNameIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// single claim value object
	ClaimValue []*ClaimValue `protobuf:"bytes,3,rep,name=claim_value,json=claimValue,proto3" json:"claim_value,omitempty"`
}

func (x *GetClaimValuesByNameIdResponse) Reset() {
	*x = GetClaimValuesByNameIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClaimValuesByNameIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClaimValuesByNameIdResponse) ProtoMessage() {}

func (x *GetClaimValuesByNameIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClaimValuesByNameIdResponse.ProtoReflect.Descriptor instead.
func (*GetClaimValuesByNameIdResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{54}
}

func (x *GetClaimValuesByNameIdResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetClaimValuesByNameIdResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetClaimValuesByNameIdResponse) GetClaimValue() []*ClaimValue {
	if x != nil {
		return x.ClaimValue
	}
	return nil
}

// request parameters for method get_claim_values
type GetClaimValuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// placeholder param to avoid empty message
	DummyParam int32 `protobuf:"varint,1,opt,name=dummy_param,json=dummyParam,proto3" json:"dummy_param,omitempty"`
}

func (x *GetClaimValuesRequest) Reset() {
	*x = GetClaimValuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClaimValuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClaimValuesRequest) ProtoMessage() {}

func (x *GetClaimValuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClaimValuesRequest.ProtoReflect.Descriptor instead.
func (*GetClaimValuesRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{55}
}

func (x *GetClaimValuesRequest) GetDummyParam() int32 {
	if x != nil {
		return x.DummyParam
	}
	return 0
}

// response parameters for method get_claim_values
type GetClaimValuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// single claim value object
	ClaimValue []*ClaimValue `protobuf:"bytes,3,rep,name=claim_value,json=claimValue,proto3" json:"claim_value,omitempty"`
}

func (x *GetClaimValuesResponse) Reset() {
	*x = GetClaimValuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClaimValuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClaimValuesResponse) ProtoMessage() {}

func (x *GetClaimValuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClaimValuesResponse.ProtoReflect.Descriptor instead.
func (*GetClaimValuesResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{56}
}

func (x *GetClaimValuesResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetClaimValuesResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetClaimValuesResponse) GetClaimValue() []*ClaimValue {
	if x != nil {
		return x.ClaimValue
	}
	return nil
}

// request parameters for method create_account_role
type CreateAccountRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService account
	AccountId int64 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// descriptive name for role
	RoleName string `protobuf:"bytes,2,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
}

func (x *CreateAccountRoleRequest) Reset() {
	*x = CreateAccountRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountRoleRequest) ProtoMessage() {}

func (x *CreateAccountRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountRoleRequest.ProtoReflect.Descriptor instead.
func (*CreateAccountRoleRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{57}
}

func (x *CreateAccountRoleRequest) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *CreateAccountRoleRequest) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

// response parameters for method create_account_role
type CreateAccountRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// unique identifier for an MService account role
	RoleId int64 `protobuf:"varint,4,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *CreateAccountRoleResponse) Reset() {
	*x = CreateAccountRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountRoleResponse) ProtoMessage() {}

func (x *CreateAccountRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountRoleResponse.ProtoReflect.Descriptor instead.
func (*CreateAccountRoleResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{58}
}

func (x *CreateAccountRoleResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CreateAccountRoleResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateAccountRoleResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CreateAccountRoleResponse) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

// request parameters for method update_account_role
type UpdateAccountRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService account role
	RoleId int64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// descriptive name for role
	RoleName string `protobuf:"bytes,3,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
}

func (x *UpdateAccountRoleRequest) Reset() {
	*x = UpdateAccountRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountRoleRequest) ProtoMessage() {}

func (x *UpdateAccountRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountRoleRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccountRoleRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{59}
}

func (x *UpdateAccountRoleRequest) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UpdateAccountRoleRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateAccountRoleRequest) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

// response parameters for method update_account_role
type UpdateAccountRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateAccountRoleResponse) Reset() {
	*x = UpdateAccountRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountRoleResponse) ProtoMessage() {}

func (x *UpdateAccountRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountRoleResponse.ProtoReflect.Descriptor instead.
func (*UpdateAccountRoleResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{60}
}

func (x *UpdateAccountRoleResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UpdateAccountRoleResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UpdateAccountRoleResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method delete_account_role
type DeleteAccountRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService account role
	RoleId int64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteAccountRoleRequest) Reset() {
	*x = DeleteAccountRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccountRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountRoleRequest) ProtoMessage() {}

func (x *DeleteAccountRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountRoleRequest.ProtoReflect.Descriptor instead.
func (*DeleteAccountRoleRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{61}
}

func (x *DeleteAccountRoleRequest) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *DeleteAccountRoleRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// response parameters for method delete_account_role
type DeleteAccountRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteAccountRoleResponse) Reset() {
	*x = DeleteAccountRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccountRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountRoleResponse) ProtoMessage() {}

func (x *DeleteAccountRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountRoleResponse.ProtoReflect.Descriptor instead.
func (*DeleteAccountRoleResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{62}
}

func (x *DeleteAccountRoleResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *DeleteAccountRoleResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DeleteAccountRoleResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method get_account_role_by_id
type GetAccountRoleByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService account role
	RoleId int64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *GetAccountRoleByIdRequest) Reset() {
	*x = GetAccountRoleByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountRoleByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRoleByIdRequest) ProtoMessage() {}

func (x *GetAccountRoleByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRoleByIdRequest.ProtoReflect.Descriptor instead.
func (*GetAccountRoleByIdRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{63}
}

func (x *GetAccountRoleByIdRequest) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

// response parameters for method get_account_role_by_id
type GetAccountRoleByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// single account role object
	AccountRole *AccountRole `protobuf:"bytes,3,opt,name=account_role,json=accountRole,proto3" json:"account_role,omitempty"`
}

func (x *GetAccountRoleByIdResponse) Reset() {
	*x = GetAccountRoleByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountRoleByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRoleByIdResponse) ProtoMessage() {}

func (x *GetAccountRoleByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRoleByIdResponse.ProtoReflect.Descriptor instead.
func (*GetAccountRoleByIdResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{64}
}

func (x *GetAccountRoleByIdResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetAccountRoleByIdResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetAccountRoleByIdResponse) GetAccountRole() *AccountRole {
	if x != nil {
		return x.AccountRole
	}
	return nil
}

// request parameters for method get_account_roles
type GetAccountRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService account
	AccountId int64 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *GetAccountRolesRequest) Reset() {
	*x = GetAccountRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRolesRequest) ProtoMessage() {}

func (x *GetAccountRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRolesRequest.ProtoReflect.Descriptor instead.
func (*GetAccountRolesRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{65}
}

func (x *GetAccountRolesRequest) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

// response parameters for method get_account_roles
type GetAccountRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// list of account role objects
	AccountRoles []*AccountRole `protobuf:"bytes,3,rep,name=account_roles,json=accountRoles,proto3" json:"account_roles,omitempty"`
}

func (x *GetAccountRolesResponse) Reset() {
	*x = GetAccountRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRolesResponse) ProtoMessage() {}

func (x *GetAccountRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRolesResponse.ProtoReflect.Descriptor instead.
func (*GetAccountRolesResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{66}
}

func (x *GetAccountRolesResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetAccountRolesResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetAccountRolesResponse) GetAccountRoles() []*AccountRole {
	if x != nil {
		return x.AccountRoles
	}
	return nil
}

// request parameters for method add_user_to_role
type AddUserToRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService account user
	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// unique identifier for an MService account role
	RoleId int64 `protobuf:"varint,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *AddUserToRoleRequest) Reset() {
	*x = AddUserToRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserToRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserToRoleRequest) ProtoMessage() {}

func (x *AddUserToRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserToRoleRequest.ProtoReflect.Descriptor instead.
func (*AddUserToRoleRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{67}
}

func (x *AddUserToRoleRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddUserToRoleRequest) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

// response parameters for method add_user_to_role
type AddUserToRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *AddUserToRoleResponse) Reset() {
	*x = AddUserToRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserToRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserToRoleResponse) ProtoMessage() {}

func (x *AddUserToRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserToRoleResponse.ProtoReflect.Descriptor instead.
func (*AddUserToRoleResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{68}
}

func (x *AddUserToRoleResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *AddUserToRoleResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// request parameters for method remove_user_from_role
type RemoveUserFromRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService account user
	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// unique identifier for an MService account role
	RoleId int64 `protobuf:"varint,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *RemoveUserFromRoleRequest) Reset() {
	*x = RemoveUserFromRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserFromRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserFromRoleRequest) ProtoMessage() {}

func (x *RemoveUserFromRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserFromRoleRequest.ProtoReflect.Descriptor instead.
func (*RemoveUserFromRoleRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{69}
}

func (x *RemoveUserFromRoleRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RemoveUserFromRoleRequest) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

// response parameters for method remove_user_from_role
type RemoveUserFromRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *RemoveUserFromRoleResponse) Reset() {
	*x = RemoveUserFromRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserFromRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserFromRoleResponse) ProtoMessage() {}

func (x *RemoveUserFromRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserFromRoleResponse.ProtoReflect.Descriptor instead.
func (*RemoveUserFromRoleResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{70}
}

func (x *RemoveUserFromRoleResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *RemoveUserFromRoleResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// request parameters for method add_claim_to_role
type AddClaimToRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService claim value
	ClaimValueId int64 `protobuf:"varint,1,opt,name=claim_value_id,json=claimValueId,proto3" json:"claim_value_id,omitempty"`
	// unique identifier for an MService account role
	RoleId int64 `protobuf:"varint,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *AddClaimToRoleRequest) Reset() {
	*x = AddClaimToRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddClaimToRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddClaimToRoleRequest) ProtoMessage() {}

func (x *AddClaimToRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddClaimToRoleRequest.ProtoReflect.Descriptor instead.
func (*AddClaimToRoleRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{71}
}

func (x *AddClaimToRoleRequest) GetClaimValueId() int64 {
	if x != nil {
		return x.ClaimValueId
	}
	return 0
}

func (x *AddClaimToRoleRequest) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

// response parameters for method add_claim_to_role
type AddClaimToRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *AddClaimToRoleResponse) Reset() {
	*x = AddClaimToRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddClaimToRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddClaimToRoleResponse) ProtoMessage() {}

func (x *AddClaimToRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddClaimToRoleResponse.ProtoReflect.Descriptor instead.
func (*AddClaimToRoleResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{72}
}

func (x *AddClaimToRoleResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *AddClaimToRoleResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// request parameters for method remove_claim_from_role
type RemoveClaimFromRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique identifier for an MService claim value
	ClaimValueId int64 `protobuf:"varint,1,opt,name=claim_value_id,json=claimValueId,proto3" json:"claim_value_id,omitempty"`
	// unique identifier for an MService account role
	RoleId int64 `protobuf:"varint,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *RemoveClaimFromRoleRequest) Reset() {
	*x = RemoveClaimFromRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveClaimFromRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveClaimFromRoleRequest) ProtoMessage() {}

func (x *RemoveClaimFromRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveClaimFromRoleRequest.ProtoReflect.Descriptor instead.
func (*RemoveClaimFromRoleRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{73}
}

func (x *RemoveClaimFromRoleRequest) GetClaimValueId() int64 {
	if x != nil {
		return x.ClaimValueId
	}
	return 0
}

func (x *RemoveClaimFromRoleRequest) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

// response parameters for method remove_claim_from_role
type RemoveClaimFromRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *RemoveClaimFromRoleResponse) Reset() {
	*x = RemoveClaimFromRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveClaimFromRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveClaimFromRoleResponse) ProtoMessage() {}

func (x *RemoveClaimFromRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveClaimFromRoleResponse.ProtoReflect.Descriptor instead.
func (*RemoveClaimFromRoleResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{74}
}

func (x *RemoveClaimFromRoleResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *RemoveClaimFromRoleResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// request parameters for method get_server_version
type GetServerVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// placeholder param to avoid empty message
	DummyParam int32 `protobuf:"varint,1,opt,name=dummy_param,json=dummyParam,proto3" json:"dummy_param,omitempty"`
}

func (x *GetServerVersionRequest) Reset() {
	*x = GetServerVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerVersionRequest) ProtoMessage() {}

func (x *GetServerVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerVersionRequest.ProtoReflect.Descriptor instead.
func (*GetServerVersionRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{75}
}

func (x *GetServerVersionRequest) GetDummyParam() int32 {
	if x != nil {
		return x.DummyParam
	}
	return 0
}

// response parameters for method get_server_version
type GetServerVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version level of server
	ServerVersion string `protobuf:"bytes,3,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
	// server uptime in seconds
	ServerUptime int64 `protobuf:"varint,4,opt,name=server_uptime,json=serverUptime,proto3" json:"server_uptime,omitempty"`
}

func (x *GetServerVersionResponse) Reset() {
	*x = GetServerVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAccount_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerVersionResponse) ProtoMessage() {}

func (x *GetServerVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAccount_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerVersionResponse.ProtoReflect.Descriptor instead.
func (*GetServerVersionResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAccount_proto_rawDescGZIP(), []int{76}
}

func (x *GetServerVersionResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetServerVersionResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetServerVersionResponse) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

func (x *GetServerVersionResponse) GetServerUptime() int64 {
	if x != nil {
		return x.ServerUptime
	}
	return 0
}

var File_MServiceAccount_proto protoreflect.FileDescriptor

var file_MServiceAccount_proto_rawDesc = []byte{
	0x0a, 0x15, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x12, 0x44, 0x6d, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa2, 0x04, 0x0a, 0x07, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x29,
	0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c,
	0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4c, 0x6f, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22,
	0xc8, 0x03, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x29, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x75, 0x6c, 0x6c,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x5f, 0x65, 0x6e, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x45, 0x6e, 0x63, 0x12, 0x4f, 0x0a, 0x0d, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x0c, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0xe6, 0x02, 0x0a, 0x0b, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x08,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x0c, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x22, 0xb3, 0x01, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0xad, 0x02, 0x0a, 0x05, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x29, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64,
	0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9d, 0x03, 0x0a, 0x0a, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6c, 0x61,
	0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x61,
	0x69, 0x6d, 0x56, 0x61, 0x6c, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a,
	0x05, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x22, 0xbe, 0x01, 0x0a, 0x0c, 0x52, 0x6f,
	0x6c, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4d, 0x61, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6c, 0x61,
	0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c,
	0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x63, 0x0a, 0x0c, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0x65, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x77, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6a, 0x77, 0x74, 0x22, 0xda, 0x02, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x6f,
	0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x22, 0x94, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x93, 0x03, 0x0a, 0x14, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2a, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x22, 0x75, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x75, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x36, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3c, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x39, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x22, 0x80, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x65, 0x6e, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x45, 0x6e, 0x63, 0x22,
	0x92, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xa6, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x79, 0x0a,
	0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x9b, 0x01, 0x0a, 0x20, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6f, 0x6c, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x4f, 0x6c, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f,
	0x65, 0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x45, 0x6e, 0x63, 0x22, 0x81, 0x01, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x77, 0x0a, 0x1f, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x65, 0x6e, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x45, 0x6e, 0x63, 0x22, 0x80, 0x01, 0x0a, 0x20, 0x52, 0x65, 0x73, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4d, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x79, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x34, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xaf, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x22, 0x57, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x22, 0xb2, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x22, 0x3b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x4f, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x22, 0x64, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a,
	0x11, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9b, 0x01, 0x0a, 0x17, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6c, 0x61,
	0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6c, 0x61,
	0x69, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x77, 0x0a,
	0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x56, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x77,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x37, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x22, 0x99, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c,
	0x0a, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x52, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x22, 0x92, 0x01, 0x0a,
	0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x6c, 0x61,
	0x69, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x9e, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x49, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x12, 0x36, 0x0a, 0x17, 0x63,
	0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x78, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x59, 0x0a,
	0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x78, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x49, 0x64, 0x22, 0xab, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x43, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4a,
	0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x22, 0xa8, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0a, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x56, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x18,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x79, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x4d, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x79, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x34, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x22, 0xaf, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x37, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xae,
	0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4f,
	0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x22,
	0x48, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x15, 0x41, 0x64, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4d, 0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x56, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x54, 0x6f, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22,
	0x5c, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x6f, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5b, 0x0a,
	0x1a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x46, 0x72, 0x6f, 0x6d,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x63,
	0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x1b, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3a, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x75, 0x6d, 0x6d,
	0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64,
	0x75, 0x6d, 0x6d, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x22, 0xaa, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x70, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x55, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x32, 0xc2, 0x25, 0x0a, 0x0f, 0x4d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x62, 0x0a, 0x05, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x2b, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b,
	0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x33, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x0e, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x34, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x12, 0x34, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x35, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x13, 0x67, 0x65, 0x74,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x82, 0x01, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x35, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x12, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x88, 0x01, 0x0a, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x12, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa1, 0x01, 0x0a,
	0x1c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x3f, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x9e, 0x01, 0x0a, 0x1b, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x3e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3f, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x88, 0x01, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x12, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d, 0x01, 0x0a,
	0x16, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x12, 0x38, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x39, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x96, 0x01, 0x0a,
	0x19, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x62, 0x79, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x3b, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x35, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x11, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x35, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x82, 0x01, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x0f, 0x67, 0x65, 0x74,
	0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x33, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x36,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x85, 0x01, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x12, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x36,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x8a, 0x01, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x12, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9a, 0x01, 0x0a,
	0x1b, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x5f, 0x62, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x3c, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x10, 0x67, 0x65, 0x74,
	0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x34, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x13, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x6f,
	0x6c, 0x65, 0x12, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x88, 0x01, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x38, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x16,
	0x67, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x12, 0x38, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x39, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x11,
	0x67, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x12, 0x35, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x7d, 0x0a, 0x10, 0x61, 0x64, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x12, 0x33, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x6f, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x8c, 0x01, 0x0a, 0x15, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x38, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72,
	0x6f, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80,
	0x01, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x6f, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x12, 0x34, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x6f, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x54, 0x6f, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x8f, 0x01, 0x0a, 0x16, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x63, 0x6c, 0x61,
	0x69, 0x6d, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x39, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x44, 0x5a, 0x30, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x65, 0x2f, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0xaa,
	0x02, 0x0f, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_MServiceAccount_proto_rawDescOnce sync.Once
	file_MServiceAccount_proto_rawDescData = file_MServiceAccount_proto_rawDesc
)

func file_MServiceAccount_proto_rawDescGZIP() []byte {
	file_MServiceAccount_proto_rawDescOnce.Do(func() {
		file_MServiceAccount_proto_rawDescData = protoimpl.X.CompressGZIP(file_MServiceAccount_proto_rawDescData)
	})
	return file_MServiceAccount_proto_rawDescData
}

var file_MServiceAccount_proto_msgTypes = make([]protoimpl.MessageInfo, 77)
var file_MServiceAccount_proto_goTypes = []interface{}{
	(*Account)(nil),                           // 0: org.gaterace.mservice.account.Account
	(*AccountUser)(nil),                       // 1: org.gaterace.mservice.account.AccountUser
	(*AccountRole)(nil),                       // 2: org.gaterace.mservice.account.AccountRole
	(*AccountRoleMap)(nil),                    // 3: org.gaterace.mservice.account.AccountRoleMap
	(*Claim)(nil),                             // 4: org.gaterace.mservice.account.Claim
	(*ClaimValue)(nil),                        // 5: org.gaterace.mservice.account.ClaimValue
	(*RoleClaimMap)(nil),                      // 6: org.gaterace.mservice.account.RoleClaimMap
	(*LoginRequest)(nil),                      // 7: org.gaterace.mservice.account.LoginRequest
	(*LoginResponse)(nil),                     // 8: org.gaterace.mservice.account.LoginResponse
	(*CreateAccountRequest)(nil),              // 9: org.gaterace.mservice.account.CreateAccountRequest
	(*CreateAccountResponse)(nil),             // 10: org.gaterace.mservice.account.CreateAccountResponse
	(*UpdateAccountRequest)(nil),              // 11: org.gaterace.mservice.account.UpdateAccountRequest
	(*UpdateAccountResponse)(nil),             // 12: org.gaterace.mservice.account.UpdateAccountResponse
	(*DeleteAccountRequest)(nil),              // 13: org.gaterace.mservice.account.DeleteAccountRequest
	(*DeleteAccountResponse)(nil),             // 14: org.gaterace.mservice.account.DeleteAccountResponse
	(*GetAccountByIdRequest)(nil),             // 15: org.gaterace.mservice.account.GetAccountByIdRequest
	(*GetAccountByIdResponse)(nil),            // 16: org.gaterace.mservice.account.GetAccountByIdResponse
	(*GetAccountByNameRequest)(nil),           // 17: org.gaterace.mservice.account.GetAccountByNameRequest
	(*GetAccountByNameResponse)(nil),          // 18: org.gaterace.mservice.account.GetAccountByNameResponse
	(*GetAccountNamesRequest)(nil),            // 19: org.gaterace.mservice.account.GetAccountNamesRequest
	(*GetAccountNamesResponse)(nil),           // 20: org.gaterace.mservice.account.GetAccountNamesResponse
	(*CreateAccountUserRequest)(nil),          // 21: org.gaterace.mservice.account.CreateAccountUserRequest
	(*CreateAccountUserResponse)(nil),         // 22: org.gaterace.mservice.account.CreateAccountUserResponse
	(*UpdateAccountUserRequest)(nil),          // 23: org.gaterace.mservice.account.UpdateAccountUserRequest
	(*UpdateAccountUserResponse)(nil),         // 24: org.gaterace.mservice.account.UpdateAccountUserResponse
	(*UpdateAccountUserPasswordRequest)(nil),  // 25: org.gaterace.mservice.account.UpdateAccountUserPasswordRequest
	(*UpdateAccountUserPasswordResponse)(nil), // 26: org.gaterace.mservice.account.UpdateAccountUserPasswordResponse
	(*ResetAccountUserPasswordRequest)(nil),   // 27: org.gaterace.mservice.account.ResetAccountUserPasswordRequest
	(*ResetAccountUserPasswordResponse)(nil),  // 28: org.gaterace.mservice.account.ResetAccountUserPasswordResponse
	(*DeleteAccountUserRequest)(nil),          // 29: org.gaterace.mservice.account.DeleteAccountUserRequest
	(*DeleteAccountUserResponse)(nil),         // 30: org.gaterace.mservice.account.DeleteAccountUserResponse
	(*GetAccountUserByIdRequest)(nil),         // 31: org.gaterace.mservice.account.GetAccountUserByIdRequest
	(*GetAccountUserByIdResponse)(nil),        // 32: org.gaterace.mservice.account.GetAccountUserByIdResponse
	(*GetAccountUserByEmailRequest)(nil),      // 33: org.gaterace.mservice.account.GetAccountUserByEmailRequest
	(*GetAccountUserByEmailResponse)(nil),     // 34: org.gaterace.mservice.account.GetAccountUserByEmailResponse
	(*GetAccountUsersRequest)(nil),            // 35: org.gaterace.mservice.account.GetAccountUsersRequest
	(*GetAccountUsersResponse)(nil),           // 36: org.gaterace.mservice.account.GetAccountUsersResponse
	(*CreateClaimNameRequest)(nil),            // 37: org.gaterace.mservice.account.CreateClaimNameRequest
	(*CreateClaimNameResponse)(nil),           // 38: org.gaterace.mservice.account.CreateClaimNameResponse
	(*UpdateClaimNameRequest)(nil),            // 39: org.gaterace.mservice.account.UpdateClaimNameRequest
	(*UpdateClaimNameResponse)(nil),           // 40: org.gaterace.mservice.account.UpdateClaimNameResponse
	(*DeleteClaimNameRequest)(nil),            // 41: org.gaterace.mservice.account.DeleteClaimNameRequest
	(*DeleteClaimNameResponse)(nil),           // 42: org.gaterace.mservice.account.DeleteClaimNameResponse
	(*GetClaimNamesRequest)(nil),              // 43: org.gaterace.mservice.account.GetClaimNamesRequest
	(*GetClaimNamesResponse)(nil),             // 44: org.gaterace.mservice.account.GetClaimNamesResponse
	(*CreateClaimValueRequest)(nil),           // 45: org.gaterace.mservice.account.CreateClaimValueRequest
	(*CreateClaimValueResponse)(nil),          // 46: org.gaterace.mservice.account.CreateClaimValueResponse
	(*UpdateClaimValueRequest)(nil),           // 47: org.gaterace.mservice.account.UpdateClaimValueRequest
	(*UpdateClaimValueResponse)(nil),          // 48: org.gaterace.mservice.account.UpdateClaimValueResponse
	(*DeleteClaimValueRequest)(nil),           // 49: org.gaterace.mservice.account.DeleteClaimValueRequest
	(*DeleteClaimValueResponse)(nil),          // 50: org.gaterace.mservice.account.DeleteClaimValueResponse
	(*GetClaimValueByIdRequest)(nil),          // 51: org.gaterace.mservice.account.GetClaimValueByIdRequest
	(*GetClaimValueByIdResponse)(nil),         // 52: org.gaterace.mservice.account.GetClaimValueByIdResponse
	(*GetClaimValuesByNameIdRequest)(nil),     // 53: org.gaterace.mservice.account.GetClaimValuesByNameIdRequest
	(*GetClaimValuesByNameIdResponse)(nil),    // 54: org.gaterace.mservice.account.GetClaimValuesByNameIdResponse
	(*GetClaimValuesRequest)(nil),             // 55: org.gaterace.mservice.account.GetClaimValuesRequest
	(*GetClaimValuesResponse)(nil),            // 56: org.gaterace.mservice.account.GetClaimValuesResponse
	(*CreateAccountRoleRequest)(nil),          // 57: org.gaterace.mservice.account.CreateAccountRoleRequest
	(*CreateAccountRoleResponse)(nil),         // 58: org.gaterace.mservice.account.CreateAccountRoleResponse
	(*UpdateAccountRoleRequest)(nil),          // 59: org.gaterace.mservice.account.UpdateAccountRoleRequest
	(*UpdateAccountRoleResponse)(nil),         // 60: org.gaterace.mservice.account.UpdateAccountRoleResponse
	(*DeleteAccountRoleRequest)(nil),          // 61: org.gaterace.mservice.account.DeleteAccountRoleRequest
	(*DeleteAccountRoleResponse)(nil),         // 62: org.gaterace.mservice.account.DeleteAccountRoleResponse
	(*GetAccountRoleByIdRequest)(nil),         // 63: org.gaterace.mservice.account.GetAccountRoleByIdRequest
	(*GetAccountRoleByIdResponse)(nil),        // 64: org.gaterace.mservice.account.GetAccountRoleByIdResponse
	(*GetAccountRolesRequest)(nil),            // 65: org.gaterace.mservice.account.GetAccountRolesRequest
	(*GetAccountRolesResponse)(nil),           // 66: org.gaterace.mservice.account.GetAccountRolesResponse
	(*AddUserToRoleRequest)(nil),              // 67: org.gaterace.mservice.account.AddUserToRoleRequest
	(*AddUserToRoleResponse)(nil),             // 68: org.gaterace.mservice.account.AddUserToRoleResponse
	(*RemoveUserFromRoleRequest)(nil),         // 69: org.gaterace.mservice.account.RemoveUserFromRoleRequest
	(*RemoveUserFromRoleResponse)(nil),        // 70: org.gaterace.mservice.account.RemoveUserFromRoleResponse
	(*AddClaimToRoleRequest)(nil),             // 71: org.gaterace.mservice.account.AddClaimToRoleRequest
	(*AddClaimToRoleResponse)(nil),            // 72: org.gaterace.mservice.account.AddClaimToRoleResponse
	(*RemoveClaimFromRoleRequest)(nil),        // 73: org.gaterace.mservice.account.RemoveClaimFromRoleRequest
	(*RemoveClaimFromRoleResponse)(nil),       // 74: org.gaterace.mservice.account.RemoveClaimFromRoleResponse
	(*GetServerVersionRequest)(nil),           // 75: org.gaterace.mservice.account.GetServerVersionRequest
	(*GetServerVersionResponse)(nil),          // 76: org.gaterace.mservice.account.GetServerVersionResponse
	(*dml.DateTime)(nil),                      // 77: dml.DateTime
}
var file_MServiceAccount_proto_depIdxs = []int32{
	77, // 0: org.gaterace.mservice.account.Account.created:type_name -> dml.DateTime
	77, // 1: org.gaterace.mservice.account.Account.modified:type_name -> dml.DateTime
	77, // 2: org.gaterace.mservice.account.Account.deleted:type_name -> dml.DateTime
	77, // 3: org.gaterace.mservice.account.AccountUser.created:type_name -> dml.DateTime
	77, // 4: org.gaterace.mservice.account.AccountUser.modified:type_name -> dml.DateTime
	77, // 5: org.gaterace.mservice.account.AccountUser.deleted:type_name -> dml.DateTime
	2,  // 6: org.gaterace.mservice.account.AccountUser.account_roles:type_name -> org.gaterace.mservice.account.AccountRole
	77, // 7: org.gaterace.mservice.account.AccountRole.created:type_name -> dml.DateTime
	77, // 8: org.gaterace.mservice.account.AccountRole.modified:type_name -> dml.DateTime
	77, // 9: org.gaterace.mservice.account.AccountRole.deleted:type_name -> dml.DateTime
	5,  // 10: org.gaterace.mservice.account.AccountRole.claim_values:type_name -> org.gaterace.mservice.account.ClaimValue
	77, // 11: org.gaterace.mservice.account.AccountRoleMap.created:type_name -> dml.DateTime
	77, // 12: org.gaterace.mservice.account.AccountRoleMap.deleted:type_name -> dml.DateTime
	77, // 13: org.gaterace.mservice.account.Claim.created:type_name -> dml.DateTime
	77, // 14: org.gaterace.mservice.account.Claim.modified:type_name -> dml.DateTime
	77, // 15: org.gaterace.mservice.account.Claim.deleted:type_name -> dml.DateTime
	77, // 16: org.gaterace.mservice.account.ClaimValue.created:type_name -> dml.DateTime
	77, // 17: org.gaterace.mservice.account.ClaimValue.modified:type_name -> dml.DateTime
	77, // 18: org.gaterace.mservice.account.ClaimValue.deleted:type_name -> dml.DateTime
	4,  // 19: org.gaterace.mservice.account.ClaimValue.claim:type_name -> org.gaterace.mservice.account.Claim
	77, // 20: org.gaterace.mservice.account.RoleClaimMap.created:type_name -> dml.DateTime
	77, // 21: org.gaterace.mservice.account.RoleClaimMap.deleted:type_name -> dml.DateTime
	0,  // 22: org.gaterace.mservice.account.GetAccountByIdResponse.account:type_name -> org.gaterace.mservice.account.Account
	0,  // 23: org.gaterace.mservice.account.GetAccountByNameResponse.account:type_name -> org.gaterace.mservice.account.Account
	1,  // 24: org.gaterace.mservice.account.GetAccountUserByIdResponse.account_user:type_name -> org.gaterace.mservice.account.AccountUser
	1,  // 25: org.gaterace.mservice.account.GetAccountUserByEmailResponse.account_user:type_name -> org.gaterace.mservice.account.AccountUser
	1,  // 26: org.gaterace.mservice.account.GetAccountUsersResponse.account_users:type_name -> org.gaterace.mservice.account.AccountUser
	4,  // 27: org.gaterace.mservice.account.GetClaimNamesResponse.claims:type_name -> org.gaterace.mservice.account.Claim
	5,  // 28: org.gaterace.mservice.account.GetClaimValueByIdResponse.claim_value:type_name -> org.gaterace.mservice.account.ClaimValue
	5,  // 29: org.gaterace.mservice.account.GetClaimValuesByNameIdResponse.claim_value:type_name -> org.gaterace.mservice.account.ClaimValue
	5,  // 30: org.gaterace.mservice.account.GetClaimValuesResponse.claim_value:type_name -> org.gaterace.mservice.account.ClaimValue
	2,  // 31: org.gaterace.mservice.account.GetAccountRoleByIdResponse.account_role:type_name -> org.gaterace.mservice.account.AccountRole
	2,  // 32: org.gaterace.mservice.account.GetAccountRolesResponse.account_roles:type_name -> org.gaterace.mservice.account.AccountRole
	7,  // 33: org.gaterace.mservice.account.MServiceAccount.login:input_type -> org.gaterace.mservice.account.LoginRequest
	9,  // 34: org.gaterace.mservice.account.MServiceAccount.create_account:input_type -> org.gaterace.mservice.account.CreateAccountRequest
	11, // 35: org.gaterace.mservice.account.MServiceAccount.update_account:input_type -> org.gaterace.mservice.account.UpdateAccountRequest
	13, // 36: org.gaterace.mservice.account.MServiceAccount.delete_account:input_type -> org.gaterace.mservice.account.DeleteAccountRequest
	15, // 37: org.gaterace.mservice.account.MServiceAccount.get_account_by_id:input_type -> org.gaterace.mservice.account.GetAccountByIdRequest
	17, // 38: org.gaterace.mservice.account.MServiceAccount.get_account_by_name:input_type -> org.gaterace.mservice.account.GetAccountByNameRequest
	19, // 39: org.gaterace.mservice.account.MServiceAccount.get_account_names:input_type -> org.gaterace.mservice.account.GetAccountNamesRequest
	21, // 40: org.gaterace.mservice.account.MServiceAccount.create_account_user:input_type -> org.gaterace.mservice.account.CreateAccountUserRequest
	23, // 41: org.gaterace.mservice.account.MServiceAccount.update_account_user:input_type -> org.gaterace.mservice.account.UpdateAccountUserRequest
	25, // 42: org.gaterace.mservice.account.MServiceAccount.update_account_user_password:input_type -> org.gaterace.mservice.account.UpdateAccountUserPasswordRequest
	27, // 43: org.gaterace.mservice.account.MServiceAccount.reset_account_user_password:input_type -> org.gaterace.mservice.account.ResetAccountUserPasswordRequest
	29, // 44: org.gaterace.mservice.account.MServiceAccount.delete_account_user:input_type -> org.gaterace.mservice.account.DeleteAccountUserRequest
	31, // 45: org.gaterace.mservice.account.MServiceAccount.get_account_user_by_id:input_type -> org.gaterace.mservice.account.GetAccountUserByIdRequest
	33, // 46: org.gaterace.mservice.account.MServiceAccount.get_account_user_by_email:input_type -> org.gaterace.mservice.account.GetAccountUserByEmailRequest
	35, // 47: org.gaterace.mservice.account.MServiceAccount.get_account_users:input_type -> org.gaterace.mservice.account.GetAccountUsersRequest
	37, // 48: org.gaterace.mservice.account.MServiceAccount.create_claim_name:input_type -> org.gaterace.mservice.account.CreateClaimNameRequest
	39, // 49: org.gaterace.mservice.account.MServiceAccount.update_claim_name:input_type -> org.gaterace.mservice.account.UpdateClaimNameRequest
	41, // 50: org.gaterace.mservice.account.MServiceAccount.delete_claim_name:input_type -> org.gaterace.mservice.account.DeleteClaimNameRequest
	43, // 51: org.gaterace.mservice.account.MServiceAccount.get_claim_names:input_type -> org.gaterace.mservice.account.GetClaimNamesRequest
	45, // 52: org.gaterace.mservice.account.MServiceAccount.create_claim_value:input_type -> org.gaterace.mservice.account.CreateClaimValueRequest
	47, // 53: org.gaterace.mservice.account.MServiceAccount.update_claim_value:input_type -> org.gaterace.mservice.account.UpdateClaimValueRequest
	49, // 54: org.gaterace.mservice.account.MServiceAccount.delete_claim_value:input_type -> org.gaterace.mservice.account.DeleteClaimValueRequest
	51, // 55: org.gaterace.mservice.account.MServiceAccount.get_claim_value_by_id:input_type -> org.gaterace.mservice.account.GetClaimValueByIdRequest
	53, // 56: org.gaterace.mservice.account.MServiceAccount.get_claim_values_by_name_id:input_type -> org.gaterace.mservice.account.GetClaimValuesByNameIdRequest
	55, // 57: org.gaterace.mservice.account.MServiceAccount.get_claim_values:input_type -> org.gaterace.mservice.account.GetClaimValuesRequest
	57, // 58: org.gaterace.mservice.account.MServiceAccount.create_account_role:input_type -> org.gaterace.mservice.account.CreateAccountRoleRequest
	59, // 59: org.gaterace.mservice.account.MServiceAccount.update_account_role:input_type -> org.gaterace.mservice.account.UpdateAccountRoleRequest
	61, // 60: org.gaterace.mservice.account.MServiceAccount.delete_account_role:input_type -> org.gaterace.mservice.account.DeleteAccountRoleRequest
	63, // 61: org.gaterace.mservice.account.MServiceAccount.get_account_role_by_id:input_type -> org.gaterace.mservice.account.GetAccountRoleByIdRequest
	65, // 62: org.gaterace.mservice.account.MServiceAccount.get_account_roles:input_type -> org.gaterace.mservice.account.GetAccountRolesRequest
	67, // 63: org.gaterace.mservice.account.MServiceAccount.add_user_to_role:input_type -> org.gaterace.mservice.account.AddUserToRoleRequest
	69, // 64: org.gaterace.mservice.account.MServiceAccount.remove_user_from_role:input_type -> org.gaterace.mservice.account.RemoveUserFromRoleRequest
	71, // 65: org.gaterace.mservice.account.MServiceAccount.add_claim_to_role:input_type -> org.gaterace.mservice.account.AddClaimToRoleRequest
	73, // 66: org.gaterace.mservice.account.MServiceAccount.remove_claim_from_role:input_type -> org.gaterace.mservice.account.RemoveClaimFromRoleRequest
	75, // 67: org.gaterace.mservice.account.MServiceAccount.get_server_version:input_type -> org.gaterace.mservice.account.GetServerVersionRequest
	8,  // 68: org.gaterace.mservice.account.MServiceAccount.login:output_type -> org.gaterace.mservice.account.LoginResponse
	10, // 69: org.gaterace.mservice.account.MServiceAccount.create_account:output_type -> org.gaterace.mservice.account.CreateAccountResponse
	12, // 70: org.gaterace.mservice.account.MServiceAccount.update_account:output_type -> org.gaterace.mservice.account.UpdateAccountResponse
	14, // 71: org.gaterace.mservice.account.MServiceAccount.delete_account:output_type -> org.gaterace.mservice.account.DeleteAccountResponse
	16, // 72: org.gaterace.mservice.account.MServiceAccount.get_account_by_id:output_type -> org.gaterace.mservice.account.GetAccountByIdResponse
	18, // 73: org.gaterace.mservice.account.MServiceAccount.get_account_by_name:output_type -> org.gaterace.mservice.account.GetAccountByNameResponse
	20, // 74: org.gaterace.mservice.account.MServiceAccount.get_account_names:output_type -> org.gaterace.mservice.account.GetAccountNamesResponse
	22, // 75: org.gaterace.mservice.account.MServiceAccount.create_account_user:output_type -> org.gaterace.mservice.account.CreateAccountUserResponse
	24, // 76: org.gaterace.mservice.account.MServiceAccount.update_account_user:output_type -> org.gaterace.mservice.account.UpdateAccountUserResponse
	26, // 77: org.gaterace.mservice.account.MServiceAccount.update_account_user_password:output_type -> org.gaterace.mservice.account.UpdateAccountUserPasswordResponse
	28, // 78: org.gaterace.mservice.account.MServiceAccount.reset_account_user_password:output_type -> org.gaterace.mservice.account.ResetAccountUserPasswordResponse
	30, // 79: org.gaterace.mservice.account.MServiceAccount.delete_account_user:output_type -> org.gaterace.mservice.account.DeleteAccountUserResponse
	32, // 80: org.gaterace.mservice.account.MServiceAccount.get_account_user_by_id:output_type -> org.gaterace.mservice.account.GetAccountUserByIdResponse
	34, // 81: org.gaterace.mservice.account.MServiceAccount.get_account_user_by_email:output_type -> org.gaterace.mservice.account.GetAccountUserByEmailResponse
	36, // 82: org.gaterace.mservice.account.MServiceAccount.get_account_users:output_type -> org.gaterace.mservice.account.GetAccountUsersResponse
	38, // 83: org.gaterace.mservice.account.MServiceAccount.create_claim_name:output_type -> org.gaterace.mservice.account.CreateClaimNameResponse
	40, // 84: org.gaterace.mservice.account.MServiceAccount.update_claim_name:output_type -> org.gaterace.mservice.account.UpdateClaimNameResponse
	42, // 85: org.gaterace.mservice.account.MServiceAccount.delete_claim_name:output_type -> org.gaterace.mservice.account.DeleteClaimNameResponse
	44, // 86: org.gaterace.mservice.account.MServiceAccount.get_claim_names:output_type -> org.gaterace.mservice.account.GetClaimNamesResponse
	46, // 87: org.gaterace.mservice.account.MServiceAccount.create_claim_value:output_type -> org.gaterace.mservice.account.CreateClaimValueResponse
	48, // 88: org.gaterace.mservice.account.MServiceAccount.update_claim_value:output_type -> org.gaterace.mservice.account.UpdateClaimValueResponse
	50, // 89: org.gaterace.mservice.account.MServiceAccount.delete_claim_value:output_type -> org.gaterace.mservice.account.DeleteClaimValueResponse
	52, // 90: org.gaterace.mservice.account.MServiceAccount.get_claim_value_by_id:output_type -> org.gaterace.mservice.account.GetClaimValueByIdResponse
	54, // 91: org.gaterace.mservice.account.MServiceAccount.get_claim_values_by_name_id:output_type -> org.gaterace.mservice.account.GetClaimValuesByNameIdResponse
	56, // 92: org.gaterace.mservice.account.MServiceAccount.get_claim_values:output_type -> org.gaterace.mservice.account.GetClaimValuesResponse
	58, // 93: org.gaterace.mservice.account.MServiceAccount.create_account_role:output_type -> org.gaterace.mservice.account.CreateAccountRoleResponse
	60, // 94: org.gaterace.mservice.account.MServiceAccount.update_account_role:output_type -> org.gaterace.mservice.account.UpdateAccountRoleResponse
	62, // 95: org.gaterace.mservice.account.MServiceAccount.delete_account_role:output_type -> org.gaterace.mservice.account.DeleteAccountRoleResponse
	64, // 96: org.gaterace.mservice.account.MServiceAccount.get_account_role_by_id:output_type -> org.gaterace.mservice.account.GetAccountRoleByIdResponse
	66, // 97: org.gaterace.mservice.account.MServiceAccount.get_account_roles:output_type -> org.gaterace.mservice.account.GetAccountRolesResponse
	68, // 98: org.gaterace.mservice.account.MServiceAccount.add_user_to_role:output_type -> org.gaterace.mservice.account.AddUserToRoleResponse
	70, // 99: org.gaterace.mservice.account.MServiceAccount.remove_user_from_role:output_type -> org.gaterace.mservice.account.RemoveUserFromRoleResponse
	72, // 100: org.gaterace.mservice.account.MServiceAccount.add_claim_to_role:output_type -> org.gaterace.mservice.account.AddClaimToRoleResponse
	74, // 101: org.gaterace.mservice.account.MServiceAccount.remove_claim_from_role:output_type -> org.gaterace.mservice.account.RemoveClaimFromRoleResponse
	76, // 102: org.gaterace.mservice.account.MServiceAccount.get_server_version:output_type -> org.gaterace.mservice.account.GetServerVersionResponse
	68, // [68:103] is the sub-list for method output_type
	33, // [33:68] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_MServiceAccount_proto_init() }
func file_MServiceAccount_proto_init() {
	if File_MServiceAccount_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_MServiceAccount_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountRoleMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Claim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleClaimMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountNamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountNamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountUserPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountUserPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetAccountUserPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetAccountUserPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccountUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccountUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountUserByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountUserByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountUserByEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountUserByEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClaimNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClaimNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClaimNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClaimNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteClaimNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteClaimNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClaimNamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClaimNamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClaimValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClaimValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClaimValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClaimValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteClaimValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteClaimValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClaimValueByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClaimValueByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClaimValuesByNameIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClaimValuesByNameIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClaimValuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClaimValuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccountRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccountRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountRoleByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountRoleByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserToRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserToRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveUserFromRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveUserFromRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddClaimToRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddClaimToRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveClaimFromRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveClaimFromRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAccount_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_MServiceAccount_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   77,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_MServiceAccount_proto_goTypes,
		DependencyIndexes: file_MServiceAccount_proto_depIdxs,
		MessageInfos:      file_MServiceAccount_proto_msgTypes,
	}.Build()
	File_MServiceAccount_proto = out.File
	file_MServiceAccount_proto_rawDesc = nil
	file_MServiceAccount_proto_goTypes = nil
	file_MServiceAccount_proto_depIdxs = nil
}
